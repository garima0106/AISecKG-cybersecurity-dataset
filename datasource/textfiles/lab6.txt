In ubuntu distribution, rsyslogd is the default system log implementation compared to its precursor syslogd. In this lab, you will learn and practice on how to setup rsyslog forwarding from a client to a centralized server. The syslog bases are presented in the lab lab-cs-sys-00008 (Syslog (syslogd) Local Logging on Linux). Since rsyslog is a successor of syslog, the basic concepts of log facilities, actions, and priority are the same. On Ubuntu system, instead of using syslog.conf, rsyslog uses rsyslog as it configuration file. Detailed rsyslog configuration files are maintained under /etc/rsyslog.d/ folder. Default rsyslog setup configurations are maintained in the file 50-default.conf, which is similar to syslog.conf using syslogd. In the following sections Selectors, Facility,and Severity Levels, we use the same descriptions from the lab lab-cs-sys-00008 (Syslog (syslogd) on Linux).The selector field itself again consists of two parts, a facility and a priority, separated by a period (“.”). Both parts are case insensitive. For example, 	Kern.none, mail.info, etc.	The facility is one of the following keywords: auth, authpriv, cron, daemon, kern, lpr, mail, mark, news, security (same as auth), syslog, user, uucp and local0 through local7. The keyword security should not be used anymore and mark is only for internal use and therefore should not be used in applications.   You may want to specify and redirect these messages here. The facility specifies the subsystem that pro- duced the message, i.e., all mail programs log with the mail facility (LOG MAIL) if they log using syslog. The facility numbers are given in Table CS-SYS-00009.1.The priority is one of the following keywords, in ascending order: debug, info, notice, warning, warn (same as warning), err, error  (same as err), crit, alert, emerg, panic (same as emerg). The keywords error, warn  and panic are deprecated and should not be used anymore. The priority defines the severity of the message, which is presented in Table CS-SYS-00009.2.   You can specify multiple facilities with the same priority pattern in one statement using the comma (“,”) operator. You may specify as much facilities as you want. Multiple selectors may be specified for a single action using the semicolon (“;”) separator. Remember that each selector in the selector field is capable to overwrite the preceding ones. Using this behavior you can exclude some priorities from the pattern.Each machine (i.e., a client) wants to write logs via rsyslog. To this end, each machine is configured as client-server syslog instances. They can create logs and store logs locally in their file system. In the centralized logging architecture, client machines will be configured to use rsyslog as a client, and they will forward every single log to a remote rsyslog server, as shown in Figure CS-SYS-00009.2, which is the central server.Centralized logging Architecture.Compared to syslog, rsyslog tries to address the following improved features:• Secure transmitted log data: implement TLS to protect data transmission;• Increase the reliability: implement a memory caching module to address when the network is down. Using the centralized logging architecture, we can achieve the following benefits:• Inspect all your logs from a single place instead of accessing individual machine.• Access to logs without access privilege to individual machines.Set up a complete log monitoring infrastructure in one place to improve the nentwork management capability.
The downside of using centralized logging server is summarized as follows:The syslog server can be overloaded: with this architecture, you are pushing logs to a remote server. As a consequence, if one machine starts sending excessive a mount of log data, it may overload the log server.The centralized system suffers single-point failure. If the log server goes down, then the ability to look at all the logs sent by the clients is lost. Moreover, if the server goes down, clients will start storing messages locally until the server is available again, thus it may fill up disk space on the client side.