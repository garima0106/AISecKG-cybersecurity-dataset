you O
need O
to O
use O
Metasploit B-TOOL
Framework I-TOOL
msf I-TOOL
to O
deploy B-FUNCTION
at O
least O
two O
successful O
attacks B-ATTACK

such O
as O
stop O
the O
service B-APP
gain O
access B-FEATURE
to O
the O
command B-TOOL
shell I-TOOL
modify O
data B-DATA
or O
service B-APP
parameters B-FEATURE
steal B-TECHNIQUE
critical B-FEATURE
data B-DATA
modify O
system B-FEATURE
configuration I-FEATURE
setup B-SYSTEM

you O
will O
run O
the O
Metasploit B-TOOL
Framework I-TOOL
MSF I-TOOL
command-line B-TOOL
CLI I-TOOL
for O
penetration B-TECHNIQUE
testing I-TECHNIQUE

You O
will O
learn O
how O
to O
use O
Metasploit B-TOOL
to O
discover B-TECHNIQUE
and O
identify B-TECHNIQUE
system B-VULNERABILITY
vulnerabilities I-VULNERABILITY
ie O
running O
Metasploitable B-SYSTEM
2 I-SYSTEM

Use O
Metasploit B-TOOL
Framework I-TOOL
to O
send O
vulnerability B-VULNERABILITY
exploitation B-DATA
packets I-DATA
for O
vulnerability B-TECHNIQUE
discovery I-TECHNIQUE

Use O
Metasploit B-TOOL
Framework I-TOOL
to O
compromise O
a O
vulnerable B-VULNERABILITY
system B-SYSTEM
ie O
Metasploitable2 B-SYSTEM

The O
Metasploit B-TOOL
Project O
is O
a O
computer B-TECHNIQUE
security I-TECHNIQUE
project O
that O
provides O
information B-DATA
about O
security B-VULNERABILITY
vulnerabilities I-VULNERABILITY
and O
aids O
in O
penetration B-TECHNIQUE
testing I-TECHNIQUE
and O
IDS B-TECHNIQUE
signature I-TECHNIQUE
development I-TECHNIQUE

Boston O
Massachusetts-based O
security B-TECHNIQUE
company O
Rapid7 B-APP
owns O
it O

Its O
best-known O
sub-project O
is O
the O
open-source B-FEATURE
Metasploit B-TOOL
Framework I-TOOL
a O
tool B-TOOL
for O
developing O
and O
executing O
exploit B-FUNCTION
code I-FUNCTION
against O
a O
remote B-SYSTEM
target I-SYSTEM
machine I-SYSTEM

The O
Metasploit B-TOOL
Project O
includes O
anti-forensic B-TECHNIQUE
and O
evasion B-TECHNIQUE
tools B-TOOL
some O
of O
which O
are O
built O
into O
the O
Metasploit B-TOOL
Framework I-TOOL

Metasploit B-TOOL
is O
pre-installed O
in O
the O
Kali B-SYSTEM
Linux I-SYSTEM
operating I-SYSTEM
system I-SYSTEM

In O
this O
lab O
we O
use O
the O
command-line B-TOOL
only O
version B-FEATURE
msfconsole B-TOOL
which O
runs O
on O
Ubuntu B-SYSTEM
Linux I-SYSTEM

The O
Metasploit B-TOOL
framework I-TOOL
consists O
of O
the O
core O
and O
base O
many O
exploits B-FUNCTION
payloads B-DATA
modules B-FUNCTION
Ruby B-TOOL
classes B-FUNCTION
plugin�s B-TOOL
scripts B-FUNCTION
and O
multiple O
user B-APP
interfaces I-APP

The O
Metasploit B-TOOL
framework I-TOOL
also O
contains O
some O
great O
information- B-DATA
gathering O
tools B-TOOL
called O
auxiliary B-TOOL
modules I-TOOL

Auxiliary B-TOOL
modules I-TOOL
can O
be O
used O
for O
port B-TECHNIQUE
scanning I-TECHNIQUE
service B-TECHNIQUE
identification I-TECHNIQUE
password B-TECHNIQUE
sniffing I-TECHNIQUE
and O
Windows B-TECHNIQUE
patch I-TECHNIQUE
enumeration I-TECHNIQUE

Metasploit B-TOOL
is O
highly O
customizable O
for O
advanced B-USER
users I-USER
and O
can O
be O
customized O
the O
meet O
your O
custom O
needs O
by O
writing O
your O
own O
exploits B-FUNCTION
modules B-TOOL
plugins B-TOOL
and O
scripts B-FUNCTION

If O
Metasploit B-TOOL
does O
not O
provide O
the O
information B-DATA
gathering O
module B-TOOL
you O
need O
by O
default B-FUNCTION
you O
can O
simply O
write O
it O
yourself O

The O
msfconsole B-TOOL
is O
the O
user B-APP
interface I-APP
known O
to O
be O
the O
most O
stable O
interface B-APP
and O
you O
can O
use O
it O
to O
execute O
external B-FUNCTION
commands I-FUNCTION
like O
the O
ping B-FUNCTION
command I-FUNCTION
and O
the O
tab B-FUNCTION
auto-completion I-FUNCTION

A O
graphical B-APP
user I-APP
interface I-APP
is O
available O
for O
Metasploit B-TOOL
called O
Armitage B-APP
which O
is O
not O
covered O
in O
this O
lab O

If O
you O
are O
on O
Kali B-SYSTEM
Linux I-SYSTEM
rolling B-FEATURE
edition I-FEATURE
you O
can O
start O
the O
Metasploit B-TOOL
framework I-TOOL
and O
msfconsole B-TOOL
by O
clicking O
the O
Metasploit B-TOOL
icon O
in O
the O
dock B-APP

This O
will O
start O
the O
PostgreSQL B-APP
service I-APP
and O
Metasploit B-APP
service I-APP
automatically O

You O
can O
run O
the O
following O
command B-FUNCTION
to O
check O
if O
Metasploit B-TOOL
is O
installed B-FUNCTION
in O
your O
system B-SYSTEM

If O
Metasploit B-TOOL
is O
not O
installed B-FUNCTION
you O
can O
follow O
the O
procedure O
below O
to O
install B-FUNCTION
Metasploit B-TOOL

The O
use B-FUNCTION
command I-FUNCTION
in O
Metasploit B-TOOL
is O
used O
to O
activate O
a O
particular O
module B-FUNCTION
and O
changes O
the O
context O
of O
the O
msfconsole B-TOOL
to O
that O
particular O
module B-FUNCTION

The O
exploit B-FUNCTION
name O
will O
be O
mentioned O
in O
red O
on O
the O
command B-TOOL
line I-TOOL

In O
this O
example O
you O
have O
changed O
the O
command B-TOOL
line�s I-TOOL
context O
to O
the O
exploit B-FUNCTION
called O
realvnc_client B-VULNERABILITY

Then O
you O
retrieve O
information B-DATA
about O
this O
exploit B-TECHNIQUE
set O
the O
required O
exploit B-FUNCTION
parameters I-FUNCTION
and O
run O
it O
against O
a O
target B-SYSTEM

If O
you O
want O
to O
leave O
the O
exploit B-FUNCTION
context O
and O
switch O
back O
to O
the O
msfconsole B-TOOL
you O
can O
use O
the O
back B-FUNCTION
command I-FUNCTION

The O
back B-FUNCTION
command I-FUNCTION
will O
take O
us O
back O
to O
the O
msfconsole B-TOOL
in O
the O
general O
context O

You O
can O
issue O
the O
use B-FUNCTION
command I-FUNCTION
again O
to O
switch O
to O
another O
Metasploit B-TOOL
module B-FUNCTION

The O
exit B-FUNCTION
command I-FUNCTION
will O
close O
the O
msfconsole B-TOOL
and O
will O
take O
you O
back O
to O
the O
Linux B-SYSTEM
terminal I-SYSTEM

The O
help B-FUNCTION
command I-FUNCTION
will O
return O
a O
list O
of O
possible O
commands B-FUNCTION
and O
a O
description O
when O
typed O
at O
the O
msfconsole B-TOOL

When O
an O
active O
exploit B-FUNCTION
is O
selected O
you O
can O
use O
the O
help B-FUNCTION
command I-FUNCTION
to O
get O
a O
list O
of O
exploit B-FUNCTION
commands I-FUNCTION

When O
an O
exploit B-FUNCTION
is O
selected O
with O
the O
use B-FUNCTION
command I-FUNCTION
you O
can O
retrieve O
information B-DATA
like O
the O
name B-FEATURE
platform B-APP
author B-USER
available O
targets B-SYSTEM
and O
a O
lot O
more O
by O
using O
the O
info B-FUNCTION
command I-FUNCTION

you O
can O
use O
the O
info B-DATA
command B-FUNCTION
on O
an O
exploit B-TECHNIQUE
named O
ie_execcommand_ua B-VULNERABILITY

Metasploit B-TOOL
contains O
over O
1500 O
different O
exploits B-TECHNIQUE
and O
new O
ones O
are O
added O
regularly O

With O
this O
number O
of O
exploits B-FUNCTION
the O
search B-FUNCTION
function I-FUNCTION
and O
knowing O
how O
to O
use O
it O
becomes O
very O
important O

The O
easiest O
way O
of O
using O
the O
search B-FUNCTION
function I-FUNCTION
is O
by O
issuing O
the O
command B-FUNCTION
search B-FUNCTION
followed O
by O
a O
search O
term O
for O
example O
flash O
to O
search O
for O
exploits B-TECHNIQUE
related O
to O
Flash B-TOOL
player I-TOOL

by O
using O
the O
search B-FUNCTION
command I-FUNCTION
Metasploit B-TOOL
will O
search O
for O
the O
given O
search O
term O
in O
the O
module B-FUNCTION
names B-FEATURE
and O
description B-FEATURE

As O
expected O
there O
are O
a O
lot O
of O
exploits B-TECHNIQUE
related O
to O
the O
often O
vulnerable B-VULNERABILITY
Flash B-APP
player I-APP
software I-APP

For O
example O
the O
list O
includes O
CVE-2015-5122 B-VULNERABILITY
Adobe I-VULNERABILITY
Flash I-VULNERABILITY
opaqueBackground I-VULNERABILITY
Use I-VULNERABILITY
After I-VULNERABILITY
Free I-VULNERABILITY
zero-day I-VULNERABILITY
which O
was O
discovered O
in O
the O
Hacking B-ATTACKER
Team I-ATTACKER
data B-ATTACK
breach I-ATTACK

You O
can O
use O
the O
search B-FUNCTION
command I-FUNCTION
with O
a O
keyword O
to O
search O
for O
a O
specific O
author B-USER
an O
OSVDB B-FEATURE
ID I-FEATURE
or O
a O
platform B-APP

Now O
you O
will O
be O
looking O
at O
how O
to O
show O
the O
exploit B-FEATURE
parameters I-FEATURE
and O
change O
them O
with O
the O
set B-FUNCTION
command I-FUNCTION

You O
will O
also O
be O
looking O
at O
how O
to O
show O
the O
payloads B-DATA
targets B-SYSTEM
advanced B-FEATURE
and O
evasion B-TECHNIQUE
options O

The O
show B-FUNCTION
options I-FUNCTION
command I-FUNCTION
will O
show O
you O
the O
available O
parameters B-FEATURE
for O
an O
exploit B-FUNCTION
if O
used O
when O
the O
command B-TOOL
line I-TOOL
is O
in O
exploit B-FUNCTION
context O

The O
Flash B-VULNERABILITY
exploit I-VULNERABILITY
contains O
a O
total O
of O
6 O
options O
from O
which O
only O
2 O
are O
required O

Note O
that O
the O
show B-FUNCTION
options I-FUNCTION
command I-FUNCTION
is O
returning O
the O
currently O
selected O
target B-SYSTEM
below O
the O
module B-FUNCTION
options O

The O
default O
target B-SYSTEM
is O
0 O
which O
is O
Windows B-SYSTEM
for O
the O
selected O
exploit B-FUNCTION

Use O
the O
set B-FUNCTION
command I-FUNCTION
followed O
by O
the O
option O
name B-FEATURE
and O
the O
new O
value O
to O
change O
the O
default O
values O

By O
using O
the O
show B-FUNCTION
options I-FUNCTION
command I-FUNCTION
again O
you O
can O
verify O
that O
the O
SRVHOST B-FEATURE
and O
SRVPORT B-FEATURE
values O
have O
been O
changed O

You O
can O
change O
Boolean B-FUNCTION
values O
by O
using O
the O
set B-FUNCTION
command I-FUNCTION
with O
option O
name O
and O
TRUE O
or O
FALSE O

When O
you O
use O
the O
show B-FUNCTION
payloads I-FUNCTION
command I-FUNCTION
the O
msfconsole B-TOOL
will O
return O
a O
list O
of O
compatible O
payloads B-DATA
for O
this O
exploit B-FUNCTION

In O
the O
flash B-VULNERABILITY
player I-VULNERABILITY
exploit I-VULNERABILITY
example O
it O
will O
return O
quite O
a O
few O
compatible O
payloads B-DATA

To O
use O
a O
certain O
payload B-DATA
you O
need O
to O
use O
the O
set B-FUNCTION
command I-FUNCTION
followed O
by O
the O
payload B-DATA
name O

The O
show B-FUNCTION
targets I-FUNCTION
command I-FUNCTION
will O
return O
a O
list O
of O
operating B-SYSTEM
systems I-SYSTEM
which O
are O
vulnerable B-VULNERABILITY
to O
the O
selected O
exploit B-FUNCTION

When O
you O
run O
the O
command B-FUNCTION
you O
get O
the O
following O
output O
for O
the O
adobe_flash_shader_drawing_fill B-VULNERABILITY
exploit I-VULNERABILITY

This O
exploit B-FUNCTION
targets B-SYSTEM
both O
Windows B-SYSTEM
and O
Linux B-SYSTEM
operating B-SYSTEM
systems I-SYSTEM

Note O
that O
you O
can O
use O
the O
info B-DATA
command I-FUNCTION
to O
get O
additional O
info B-DATA
about O
this O
exploit B-FUNCTION
and O
targets B-SYSTEM

To O
set O
a O
target B-SYSTEM
you O
can O
use O
the O
command B-FUNCTION
set I-FUNCTION
followed O
by O
the O
target B-FEATURE
ID I-FEATURE

By O
setting O
the O
target B-SYSTEM
the O
list O
of O
payloads B-DATA
will O
be O
reduced O
a O
lot O
because O
only O
payloads B-DATA
will O
be O
shown O
which O
are O
compatible O
with O
the O
target B-SYSTEM
Linux B-SYSTEM

By O
using O
the O
show B-FUNCTION
advanced I-FUNCTION
command I-FUNCTION
we O
can O
look O
at O
the O
advanced B-FEATURE
options I-FEATURE
for O
the O
exploit B-FUNCTION

Use O
the O
set B-FUNCTION
command I-FUNCTION
followed O
by O
the O
advanced B-FEATURE
parameter B-FEATURE
and O
the O
new O
value O
to O
change O
the O
advanced B-FEATURE
settings O

The O
show B-FUNCTION
nops I-FUNCTION
command I-FUNCTION
will O
return O
a O
list O
of O
NOP B-FUNCTION
generators I-FUNCTION

A O
NOP B-FUNCTION
is O
short O
for O
No B-FUNCTION
Operation I-FUNCTION
and O
is O
used O
to O
change O
the O
pattern O
of O
a O
NOP B-FUNCTION
sled I-FUNCTION
in O
order O
to O
bypass O
simple O
IDS B-TOOL
IPS B-TOOL
signatures B-FEATURE
of O
common O
NOP B-FUNCTION
sleds I-FUNCTION

The O
NOP B-FUNCTION
generators I-FUNCTION
start O
with O
the O
CPU B-SYSTEM
architecture I-SYSTEM
in O
the O
name O

To O
use O
a O
NOP B-FUNCTION
generator I-FUNCTION
use O
the O
set B-FUNCTION
command I-FUNCTION
followed O
by O
the O
name O
of O
the O
NOP B-FUNCTION
generator I-FUNCTION

When O
the O
exploit B-FUNCTION
is O
launched O
the O
NOP B-FUNCTION
sleds I-FUNCTION
will O
be O
taken O
from O
the O
NOP B-FUNCTION
generator I-FUNCTION

The O
show B-FUNCTION
evasion I-FUNCTION
command I-FUNCTION
returns O
a O
list O
of O
available O
evasion B-TECHNIQUE
techniques I-TECHNIQUE

To O
change O
evasions B-TECHNIQUE
settings B-FEATURE
use O
the O
set B-FUNCTION
command I-FUNCTION
followed O
by O
the O
evasion B-TECHNIQUE
parameter B-FEATURE
and O
the O
new O
value O

When O
all O
the O
required O
options O
have O
been O
set O
for O
the O
exploit B-FUNCTION
including O
a O
payload B-DATA
and O
advanced B-FEATURE
settings B-FEATURE
like O
a O
NOP B-FUNCTION
generator I-FUNCTION
evasion B-TECHNIQUE
options O
and O
encoding B-FUNCTION
the O
exploit B-FUNCTION
is O
ready O
to O
be O
executed O

The O
exploit B-FUNCTION
can O
be O
executed O
using O
two O
commands B-FUNCTION
run B-FUNCTION
and O
exploit B-FUNCTION

Just O
type O
run B-FUNCTION
or O
exploit B-FUNCTION
in O
the O
msfconsole B-TOOL
and O
the O
exploit B-FUNCTION
will O
run O

Metasploitable B-SYSTEM
2 I-SYSTEM
is O
an O
intentionally O
vulnerable B-VULNERABILITY
Linux B-SYSTEM
machine I-SYSTEM
downloaded O
and O
set O
up O
as O
a O
virtual B-SYSTEM
machine I-SYSTEM
in O
any O
hypervisor B-SYSTEM
such O
as O
KVM B-SYSTEM
VMware B-SYSTEM
Player I-SYSTEM
and O
Virtual B-SYSTEM
box I-SYSTEM

An O
important O
part O
of O
the O
Metasploitable B-SYSTEM
2 I-SYSTEM
enumeration O
process O
is O
the O
port B-TECHNIQUE
scanning I-TECHNIQUE
and O
fingerprinting B-TECHNIQUE
process I-TECHNIQUE

Port B-TECHNIQUE
scanning I-TECHNIQUE
is O
used O
to O
probe B-TECHNIQUE
a O
server B-SYSTEM
or O
host B-SYSTEM
for O
open B-FEATURE
TPC B-FEATURE
and O
UDP B-FEATURE
ports I-FEATURE

Fingerprinting B-TECHNIQUE
is O
the O
process O
of O
identifying O
the O
services B-APP
connected O
to O
those O
ports B-FEATURE

The O
default O
username/password B-FEATURE
of O
Metasploitable B-SYSTEM
2 I-SYSTEM
is O
msfadmin/msfadmin B-FEATURE

When O
you O
log O
in O
to O
the O
vulnerable B-VULNERABILITY
host B-SYSTEM
you O
can O
use O
the O
ifconfig B-FUNCTION
command I-FUNCTION
to O
determine O
its O
IP B-FEATURE
address I-FEATURE

You O
can O
also O
use O
netdiscover B-TOOL
on O
the O
Kali B-SYSTEM
Linux I-SYSTEM
machine I-SYSTEM
to O
scan B-TECHNIQUE
a O
range O
of O
IP B-FEATURE
addresses I-FEATURE
for O
the O
target B-SYSTEM
host I-SYSTEM

You O
can O
use O
the O
following O
command B-FUNCTION
to O
start O
the O
Nmap B-TOOL
port B-TECHNIQUE
scan I-TECHNIQUE
with O
service B-APP
and O
OS B-TECHNIQUE
detection I-TECHNIQUE

The O
Nmap B-TOOL
port B-TECHNIQUE
scan I-TECHNIQUE
and O
service B-TECHNIQUE
scans I-TECHNIQUE
return O
a O
lot O
of O
open B-FEATURE
ports I-FEATURE
listening O
services B-APP
and O
the O
version B-FEATURE
of O
the O
operating B-SYSTEM
system I-SYSTEM

The O
Metasploitable-2 B-SYSTEM
host I-SYSTEM
is O
running O
Linux B-SYSTEM
269 I-SYSTEM
- I-SYSTEM
2633 I-SYSTEM
as O
the O
operating B-SYSTEM
system I-SYSTEM

We O
can O
see O
that O
the O
host B-SYSTEM
is O
running O
an O
SSH B-APP
service I-APP
using O
OpenSSH B-TOOL
a O
telnet B-APP
service I-APP
an O
Apache B-SYSTEM
228 I-SYSTEM
webserver I-SYSTEM
2 O
SQL B-SYSTEM
servers I-SYSTEM
and O
some O
more O
services B-APP

A O
list O
of O
running O
services B-APP
and O
their O
running O
ports B-FEATURE
are O
given O

Metasploitable B-SYSTEM
2 I-SYSTEM
is O
intentionally O
vulnerable B-VULNERABILITY

Therefore O
one O
can O
only O
suspect O
that O
most O
if O
not O
all O
of O
the O
services B-APP
contain O
vulnerabilities B-VULNERABILITY
backdoors B-ATTACK
etc O

With O
user B-VULNERABILITY
enumeration I-VULNERABILITY
the O
penetrations B-SECURITYTEAM
tester I-SECURITYTEAM
sees O
what O
users B-USER
have O
access O
to O
the O
server B-SYSTEM
and O
which O
users B-USER
exist O
on O
the O
network B-SYSTEM

Another O
purpose O
for O
user B-VULNERABILITY
enumeration I-VULNERABILITY
is O
to O
gain O
access O
to O
the O
machine B-SYSTEM
by O
using O
brute B-TECHNIQUE
force I-TECHNIQUE
techniques I-TECHNIQUE

Since O
the O
username B-FEATURE
is O
already O
known O
to O
the O
penetration B-SECURITYTEAM
tester I-SECURITYTEAM
the O
only O
thing O
left O
to O
brute B-TECHNIQUE
force I-TECHNIQUE
is O
the O
password B-FEATURE

There O
are O
multiple O
ways O
of O
enumerating B-VULNERABILITY
users I-VULNERABILITY
on O
a O
Linux B-SYSTEM
system I-SYSTEM

To O
enumerate B-FUNCTION
the O
user B-FEATURE
accounts I-FEATURE
available O
on O
the O
target B-SYSTEM
machine I-SYSTEM
you O
will O
be O
using O
the O
following O
Nmap B-FUNCTION
script I-FUNCTION

Rpcclient B-TOOL
is O
a O
Linux B-SYSTEM
tool O
used O
for O
executing O
client-side B-SYSTEM
MS-RPC B-FUNCTION
functions I-FUNCTION

A O

session I-FEATURE
is O
a O
connection B-FEATURE
with O
a O
samba B-SYSTEM
or O
SMB B-SYSTEM
server I-SYSTEM
that O
does O
not O
require O
authentication B-TECHNIQUE
with O
a O
password B-FEATURE

No O
username B-FEATURE
or O
password B-FEATURE
is O
needed O
to O
set-up O
the O
connection B-FEATURE
and O
therefore O
it O
is O
called O
a O

session I-FEATURE

The O
allowance O
of O

sessions I-FEATURE
was O
enabled O
by O
default O
on O
legacy B-SYSTEM
systems I-SYSTEM
but O
has O
been O
disabled O
from O
Windows B-SYSTEM
XP I-SYSTEM
SP2 I-SYSTEM
and O
Windows B-SYSTEM
Server I-SYSTEM
2003 I-SYSTEM

The O
connection B-FEATURE
uses O
port B-FEATURE
445 I-FEATURE
an O
open B-FEATURE
port I-FEATURE
on O
the O
out O
target B-SYSTEM
host I-SYSTEM
as O
we've O
seen O
in O
the O
port B-TECHNIQUE
scan I-TECHNIQUE
results O

Now O
you O
can O
open O
up O
a O
new O
terminal B-SYSTEM
window B-SYSTEM
and O
set O
up O
a O

session I-FEATURE
with O
the O
Metasploitable B-SYSTEM
2 I-SYSTEM
samba B-SYSTEM
server I-SYSTEM

It O
will O
ask O
for O
a O
password B-FEATURE
and O
you O
can O
press O
enter O

Then O
you O
can O
use O
the O
following O
command B-FUNCTION
to O
enumerate B-FUNCTION
all O
the O
users B-USER
in O
the O
system B-SYSTEM

Enum4linux B-TOOL
can O
be O
found O
on O
Kali B-SYSTEM
Linux I-SYSTEM

It O
is O
used O
to O
enumerate B-FUNCTION
Windows B-SYSTEM
and O
Samba B-SYSTEM
hosts B-SYSTEM
and O
is O
written O
in O
Perl B-TOOL

The O
tool O
is O
basically O
a O
wrapper B-FUNCTION
for O
smbclient B-SYSTEM
rpcclient B-SYSTEM
net O
and O
nmblookup B-TOOL

Let�s O
have O
a O
look O
at O
how O
to O
use O
enum4linux B-TOOL
and O
run O
it O
on O
Metasploitable B-SYSTEM
2 I-SYSTEM

Below O
are O
the O
most O
common O
options O
used O
in O
enum4linux B-TOOL

In O
the O
Metasploit B-TOOL
console B-TOOL
you O
can O
gather O
information B-DATA
such O
as O
target B-SYSTEM
IP B-FEATURE
address I-FEATURE
Operating B-SYSTEM
System I-SYSTEM
ports B-FEATURE
opened B-FEATURE
and O
vulnerability B-VULNERABILITY

Metasploit B-TOOL
allows O
you O
to O
run O
Nmap B-TOOL
directly O
from O
the O
console B-TOOL

Nmap B-TOOL
output B-FEATURE
contained O
over O
600 O
lines O
therefore O
the O
output B-FEATURE
was O
shortened O
leaving O
relevant O
information B-DATA
to O
be O
explained O

The O
following O
lines O
show O
us O
the O
initialized O
scans B-TECHNIQUE
types O
which O
involve O
NSE B-TOOL
ARP B-TECHNIQUE
Ping I-TECHNIQUE
Scan I-TECHNIQUE
DNS B-FUNCTION
resolution I-FUNCTION
and O
an O
SYN B-TECHNIQUE
Stealth I-TECHNIQUE
Scan I-TECHNIQUE

The O
next O
extract O
shows O
what O
services B-APP
are O
available O
at O
the O
target B-SYSTEM

The O
following O
extract O
report O
NSE B-TOOL
post B-FUNCTION
scan I-FUNCTION
scripts I-FUNCTION
execution O
to O
find O
vulnerabilities B-VULNERABILITY

As O
you O
can O
see O
Nmap B-TOOL
already O
found O
security B-VULNERABILITY
holes I-VULNERABILITY
or O
vulnerabilities B-VULNERABILITY
on O
the O
target B-SYSTEM
FTP B-APP
service I-APP
it O
even O
links O
us O
exploits B-FUNCTION
to O
hack B-ATTACK
the O
target B-SYSTEM

Once O
you O
identified O
security B-VULNERABILITY
holes I-VULNERABILITY
on O
your O
target B-SYSTEM
use O
Metasploit B-TOOL
commands B-FUNCTION
to O
find O
proper O
exploits B-FUNCTION
against O
them O

As O
you O
saw O
previously O
one O
of O
the O
first O
vulnerabilities B-VULNERABILITY
found O
was O
on O
the O
vsFTPD B-SYSTEM
server I-SYSTEM
to O
find O
proper O
exploits B-FUNCTION

As O
you O
see O
Metasploit B-TOOL
contains O
a O
backdoor B-ATTACK
which O
possibly O
may O
help O
us O
to O
hack B-ATTACK
our O
target B-SYSTEM
FTP B-FEATURE

To O
use O
this O
exploit B-FUNCTION
within O
Metasploit B-TOOL
run O

After O
the O
command B-TOOL
shell I-TOOL
ie O
the O
backdoor B-ATTACK
is O
established O
then O
you O
can O
run O
command B-FUNCTION
ls B-FUNCTION
in O
the O
targeting B-SYSTEM
system I-SYSTEM

Syslog B-TOOL
is O
one O
of O
the O
most O
important O
standards O
used O
in O
Linux B-SYSTEM
as O
it O
is O
the O
key O
file B-DATA
which O
helps O
you O
determine O
the O
different O
level O
of O
logs B-DATA
which O
are O
getting O
generated O
and O
stored O
every O
second O
while O
you O
are O
working O
on O
your O
Linux B-SYSTEM
box I-SYSTEM

Syslog B-TOOL
can O
be O
taken O
as O
System B-DATA
Log I-DATA
Benefits O
of O
using O
syslog B-TOOL

Helps O
analyze O
the O
root O
cause O
for O
any O
trouble O
or O
problem O
caused O

Reduce O
overall O
downtime B-FEATURE
helping O
to O
troubleshoot B-TECHNIQUE
issues O
faster O
with O
all O
the O
logs B-DATA

Improves O
incident B-TECHNIQUE
management I-TECHNIQUE
by O
active O
detection B-TECHNIQUE
of O
issues B-VULNERABILITY

Self-determination O
of O
incidents B-ATTACK
along O
with O
auto B-TECHNIQUE
resolution I-TECHNIQUE

Simplified O
architecture B-SYSTEM
with O
different O
level O
of O
severity B-FEATURE
like O
error B-DATA
info B-DATA
warning B-DATA
etc O

The O
syslogconf B-DATA
file I-DATA
is O
the O
main O
configuration B-DATA
file I-DATA
for O
the O
syslogd B-DATA
which O
logs B-FUNCTION
system B-DATA
messages I-DATA
on O
Unix/Linux B-SYSTEM
Systems B-SYSTEM

This O
file B-DATA
specifies O
rules B-FUNCTION
for O
logging B-FUNCTION

However O
in O
this O
lab O
we O
use O
syslog B-TOOL
terms O
to O
illustrate O
the O
basic O
concepts O
and O
use O
rsyslog B-TOOL
as O
the O
working O
logging B-TOOL
system I-TOOL
which O
is O
the O
default O
system B-DATA
log I-DATA
on O
Ubuntu B-SYSTEM
Linux I-SYSTEM
distribution I-SYSTEM

When O
configure B-FUNCTION
syslog B-TOOL
syslogconf B-DATA
is O
the O
one O
for O
syslogd B-DATA
and O
rsyslog B-TOOL
configures B-FUNCTION
are O
set O
up O
in O
the O
/etc/rsyslogd/ B-FEATURE
folder B-DATA
every O
rule B-FUNCTION
consists O
of O
two O
fields B-FEATURE
a O
selector B-FEATURE
field I-FEATURE
and O
an O
action B-FEATURE
field I-FEATURE

These O
two O
fields B-FEATURE
are O
separated O
by O
one O
or O
more O
spaces O
or O
tabs O

The O
selector B-FEATURE
field I-FEATURE
specifies O
a O
pattern O
of O
facilities O
and O
priorities O
belonging O
to O
the O
specified O
action B-FEATURE

The O
selector B-FEATURE
field I-FEATURE
itself O
again O
consists O
of O
two O
parts O
a O
facility B-SYSTEM
and O
a O
priority B-FEATURE
separated O
by O
a O
period O

The O
facility B-SYSTEM
is O
one O
of O
the O
following O
keywords O
auth B-FEATURE
authpriv B-FEATURE
cron B-FEATURE
daemon B-TOOL
kern B-APP
lpr B-SYSTEM
mail B-APP
mark B-FEATURE
news B-FEATURE
security B-TECHNIQUE
same O
as O
auth B-FEATURE
syslog B-TOOL
user B-USER
uucp B-FEATURE
and O
local0 B-FEATURE
through O
local7 B-FEATURE

The O
keyword O
security B-TECHNIQUE
should O
not O
be O
used O
anymore O
and O
mark O
is O
only O
for O
internal O
use O
and O
therefore O
should O
not O
be O
used O
in O
applications B-APP

You O
may O
want O
to O
specify O
and O
redirect O
these O
messages B-DATA
here O

The O
facility B-SYSTEM
specifies O
the O
subsystem B-SYSTEM
that O
produced O
the O
message B-DATA
ie O
all O
mail B-APP
programs I-APP
log B-FUNCTION
with O
the O
mail B-APP
facility B-SYSTEM
LOG B-APP
MAIL I-APP
if O
they O
log B-FUNCTION
using O
syslog B-TOOL

The O
priority B-FEATURE
is O
one O
of O
the O
following O
keywords O
in O
ascending O
order: O
debug B-TECHNIQUE
info B-DATA
notice B-DATA
warning B-DATA
warn B-FEATURE
same O
as O
warning B-DATA
err B-FEATURE
error B-DATA
same O
as O
err B-DATA
crit B-FEATURE
alert B-DATA
emerg B-FEATURE
panic B-FEATURE
same O
as O
emerg B-FEATURE

The O
keywords O
error B-DATA
warn B-FEATURE
and O
panic B-FEATURE
are O
deprecated O
and O
should O
not O
be O
used O
anymore O

The O
priority B-FEATURE
defines O
the O
severity B-FEATURE
of O
the O
message B-DATA

Multiple O
selectors B-FEATURE
may O
be O
specified O
for O
a O
single O
action O
using O
the O
semicolon O
u O
separator O

The O
following O
presented O
modifications O
provide O
network B-TECHNIQUE
support I-TECHNIQUE
to O
the O
syslogd B-DATA
facility B-SYSTEM

For O
examples O
if O
we O
want O
to O
log B-FUNCTION
all O
the O
critical B-FEATURE
events O
on O
your O
Linux B-SYSTEM
machine I-SYSTEM
in O
a O
separate O
log B-DATA
file I-DATA
inside O
/var/log B-FEATURE
with O
a O
name O
of O
criticallog B-DATA

Log B-FUNCTION
all O
the O
kernel B-APP
related O
messages B-DATA
in O
separate O
log B-DATA
file I-DATA

Redirect O
all O
the O
error B-DATA
logs B-DATA
to O
a O
remote B-FEATURE
user B-USER
on O
their O
terminals B-SYSTEM

Log B-FUNCTION
all O
the O
firewall B-TOOL
warning B-DATA
level O
messages B-DATA

Network B-TECHNIQUE
support I-TECHNIQUE
means O
that O
messages B-DATA
can O
be O
forwarded O
from O
one O
node B-SYSTEM
running O
syslogd B-DATA
to O
another O
node B-SYSTEM
running O
syslogd B-DATA
where O
they O
will O
be O
actually O
logged B-FUNCTION
to O
a O
disk B-DATA
file I-DATA

The O
strategy O
is O
to O
have O
syslogd B-DATA
listen O
on O
a O
Unix/Linux B-SYSTEM
domain B-FEATURE
socket I-FEATURE
for O
locally O
generated O
log B-DATA
messages I-DATA

This O
behavior O
will O
allow O
syslogd B-DATA
to O
inter-operate O
with O
the O
syslog B-TOOL
found O
in O
the O
standard B-APP
C I-APP
library I-APP

At O
the O
same O
time O
syslogd B-DATA
listens O
on O
the O
standard O
syslog B-APP
port B-FEATURE
for O
messages B-DATA
forwarded O
from O
other O
hosts B-SYSTEM

If O
this O
entry O
is O
missing O
syslogd B-DATA
neither O
can O
receive O
remote B-FEATURE
messages B-DATA
nor O
send O
them O
because O
the O
UDP B-FEATURE
port I-FEATURE
cannot O
be O
opened O

Instead O
syslogd B-APP
will O
die O
immediately O
blowing O
out O
an O
error B-DATA
message I-DATA

For O
example O
to O
forward O
ALL O
messages B-DATA
to O
a O
remote O
host O
uses O
the O
following O
syslogconf O
entry O

To O
forward O
all O
kernel B-APP
messages B-DATA
to O
a O
remote B-SYSTEM
host I-SYSTEM
the O
configuration B-DATA
file I-DATA

The O
implementation O
of O
syslog B-APP
on O
Ubuntu B-SYSTEM
is O
rsyslogd B-DATA

To O
determine O
if O
rsyslogd B-DATA
is O
installed O
on O
Ubuntu B-SYSTEM

A O
common O
rsyslogd B-DATA
status O
checking O
reply O

How O
to O
modify O
the O
iptables B-APP
rules B-FUNCTION
to O
let O
it O
log O
at O
the O
appropriate O
level O

How O
to O
configure B-FUNCTION
syslog B-DATA
to O
log B-FUNCTION
the O
iptables B-APP
messages B-DATA
to O
a O
different O
log B-DATA
file I-DATA

To O
stop O
iptables B-APP
messages B-DATA
to O
get O
logged B-FUNCTION
into O
/var/log/messages B-FEATURE

Assume O
that O
you O
are O
currently O
logging B-FUNCTION
all O
the O
firewall B-TOOL
warning B-DATA
level O
messages B-DATA

Restart B-FUNCTION
the O
rsyslog B-TOOL
and O
make O
sure O
that O
there O
are O
no O
errors B-DATA

Make O
sure O
the O
iptables B-APP
rule B-FUNCTION
is O
logging B-FUNCTION
at O
the O
appropriate O
level O

This O
can O
be O
done O
by O
using O
the O
log-level B-FUNCTION
switch I-FUNCTION

Run O
ssh B-FUNCTION
and O
ping B-FUNCTION
to O
test O
your O
firewall B-TOOL
logs B-DATA

If O
you O
want O
to O
print B-FUNCTION
your O
iptables B-APP
logs B-DATA
on O
your O
monitoring B-TECHNIQUE
console B-TOOL

Assume O
that O
you O
are O
currently O
logging B-FUNCTION
all O
the O
kernel B-APP
related O
messages B-DATA
in O
separate O
log B-DATA
file I-DATA

In O
ubuntu B-SYSTEM
distribution I-SYSTEM
rsyslogd B-DATA
is O
the O
default O
system B-DATA
log I-DATA
implementation O
compared O
to O
its O
precursor O
syslogd B-DATA

In O
this O
lab O
you O
will O
learn O
and O
practice O
on O
how O
to O
setup B-SYSTEM
rsyslog B-TOOL
forwarding B-FEATURE
from O
a O
client B-SYSTEM
to O
a O
centralized B-SYSTEM
server I-SYSTEM

The O
syslog B-TOOL
basics O
are O
presented O
in O
the O
Syslog B-TOOL
syslogd B-DATA
Local B-FEATURE
Logging B-FUNCTION
on O
Linux B-SYSTEM
Since O
rsyslog B-TOOL
is O
a O
successor O
of O
syslog B-TOOL
the O
basic O
concepts O
of O
log B-DATA
facilities B-SYSTEM
actions B-FEATURE
and O
priority B-FEATURE
are O
the O
same O

On O
Ubuntu B-SYSTEM
system I-SYSTEM
instead O
of O
using O
syslog.conf B-DATA
rsyslog B-TOOL
uses O
rsyslog B-TOOL
as O
it O
configuration B-DATA
file I-DATA

Detailed O
rsyslog B-TOOL
configuration B-DATA
files I-DATA
are O
maintained O
under O
/etc/rsyslogd/ B-FEATURE
folder B-DATA

Default B-FEATURE
rsyslog B-TOOL
setup B-FEATURE
configurations I-FEATURE
are O
maintained O
in O
the O
file B-DATA
50-defaultconf B-DATA
which O
is O
similar O
to O
syslogconf B-DATA
using O
syslogd B-DATA

In O
the O
following O
sections O
Selectors B-FEATURE
Facility B-SYSTEM
and O
Severity B-FEATURE
Levels I-FEATURE
we O
use O
the O
same O
descriptions B-FEATURE

Logs B-DATA
are O
stored O
at O
/var/log/ B-FEATURE
on O
the O
Linux B-SYSTEM
filesystem B-SYSTEM

At O
this O
location B-SYSTEM
you O
should O
see O
multiple O
log B-DATA
files I-DATA
each O
one O
having O
a O
name O
describing O
what O
they O
actually O
store O

In O
this O
example O
you O
have O
dedicated O
log B-DATA
files I-DATA
for O
authentication B-TECHNIQUE
purposes O
or O
for O
kernel B-APP
related O
logs B-DATA

The O
folder B-DATA
/var/log B-FEATURE
does O
not O
contain O
only O
files B-DATA
but O
it O
also O
contain O
dedicated O
folders B-DATA
that O
vendors B-USER
create O
when O
the O
application B-APP
is O
installed B-FUNCTION

Suppose O
that O
three O
machines B-SYSTEM
are O
sending O
logs B-DATA
to O
the O
log B-SYSTEM
server I-SYSTEM
each O
machine B-SYSTEM
is O
going O
to O
have O
its O
own O
authlog B-DATA
kernlog B-DATA
or O
dpkglog B-DATA
files B-DATA

Each O
machine B-SYSTEM
ie O
a O
client B-SYSTEM
wants O
to O
write O
logs B-DATA
via O
rsyslog B-TOOL
To O
this O
end O
each O
machine B-SYSTEM
is O
configured B-FUNCTION
as O
client-server B-SYSTEM
syslog B-TOOL
instances B-SYSTEM

They O
can O
create O
logs B-DATA
and O
store O
logs B-DATA
locally O
in O
their O
file B-SYSTEM
system I-SYSTEM
In O
the O
centralized B-SYSTEM
logging I-SYSTEM
architecture I-SYSTEM
client B-SYSTEM
machines I-SYSTEM
will O
be O
configured B-FUNCTION
to O
use O
rsyslog B-TOOL
as O
a O
client B-SYSTEM
and O
they O
will O
forward B-FEATURE
every O
single O
log B-DATA
to O
a O
remote B-SYSTEM
rsyslog I-SYSTEM
server I-SYSTEM

which O
is O
the O
central B-SYSTEM
server I-SYSTEM

Compared O
to O
syslog B-TOOL
rsyslog B-TOOL
tries O
to O
address O
the O
following O
improved O
features O

Secure B-FEATURE
transmitted B-FEATURE
log B-DATA
data I-DATA
implement O
TLS B-TECHNIQUE
to O
protect B-FEATURE
data B-FEATURE
transmission I-FEATURE

Increase O
the O
reliability: B-TECHNIQUE
implement O
a O
memory B-TECHNIQUE
caching I-TECHNIQUE
module B-FUNCTION
to O
address O
when O
the O
network B-SYSTEM
is O
down B-FEATURE

Using O
the O
centralized B-SYSTEM
logging I-SYSTEM
architecture I-SYSTEM
we O
can O
achieve O
the O
following O
benefits O

Inspect B-TECHNIQUE
all O
your O
logs B-DATA
from O
a O
single O
place O
instead O
of O
accessing O
individual O
machine B-SYSTEM

Access B-FEATURE
to O
logs B-DATA
without O
access B-FEATURE
privilege I-FEATURE
to O
individual O
machines B-SYSTEM

Set O
up O
a O
complete O
log B-TECHNIQUE
monitoring I-TECHNIQUE
infrastructure B-SYSTEM
in O
one O
place O
to O
improve O
the O
network B-TECHNIQUE
management I-TECHNIQUE
capability O

The O
downside O
of O
using O
centralized B-SYSTEM
logging I-SYSTEM
server I-SYSTEM

The O
syslog B-SYSTEM
server I-SYSTEM
can O
be O
overloaded: O
with O
this O
architecture B-SYSTEM
you O
are O
pushing O
logs B-DATA
to O
a O
remote B-SYSTEM
server I-SYSTEM

if O
one O
machine B-SYSTEM
starts O
sending O
excessive O
amount O
of O
log B-DATA
data I-DATA
it O
may O
overload O
the O
log B-SYSTEM
server I-SYSTEM

The O
centralized B-SYSTEM
system I-SYSTEM
suffers O
single-point B-FEATURE
failure I-FEATURE

If O
the O
log B-SYSTEM
server I-SYSTEM
goes O
down O
then O
the O
ability O
to O
look O
at O
all O
the O
logs B-DATA
sent O
by O
the O
clients B-SYSTEM
is O
lost O

Moreover O
if O
the O
server B-SYSTEM
goes O
down O
clients B-SYSTEM
will O
start O
storing O
messages B-DATA
locally B-FEATURE
until O
the O
server B-SYSTEM
is O
available O
again O
thus O
it O
may O
fill O
up O
disk B-SYSTEM
space I-SYSTEM
on O
the O
client B-SYSTEM
side I-SYSTEM

The O
implementation O
of O
syslog B-TOOL
on O
Ubuntu B-SYSTEM
is O
rsyslogd B-DATA

To O
determine O
if O
rsyslogd B-DATA
is O
installed O
on O
Ubuntu B-SYSTEM

First O
of O
all O
you O
have O
to O
configure B-FUNCTION
your O
rsyslog B-SYSTEM
server I-SYSTEM
for O
it O
to O
accept O
incoming O
logs B-DATA
on O
port B-FEATURE
514 I-FEATURE

We O
are O
going O
to O
use O
TCP B-FEATURE
for O
log B-FEATURE
transmission I-FEATURE

You O
can O
use O
UDP B-FEATURE
if O
the O
network B-TECHNIQUE
reliability I-TECHNIQUE
is O
not O
a O
big O
concern O

This O
is O
the O
directory B-DATA
that O
stores O
templates B-FEATURE
as O
well O
as O
files B-DATA
that O
contain O
the O
rsyslog B-FUNCTION
rules I-FUNCTION

In O
this O
directory B-DATA
there O
is O
a O
50-defaultconf B-DATA
file I-DATA

You O
are O
going O
to O
create O
your O
own O
configuration B-DATA
file I-DATA
prefixing O
it O
with O
a O
number O
lower O
than O
the O
configuration B-DATA
file I-DATA
one O

In O
this O
way O
your O
configuration B-DATA
file I-DATA
takes O
priority O
over O
the O
default B-FEATURE
one O

Remote B-SYSTEM
Server I-SYSTEM
means O
to O
send O
for O
every O
facility B-SYSTEM
and O
every O
severity B-FEATURE
to O
the O
remote B-SYSTEM
server I-SYSTEM
template B-FEATURE

rsyslog B-TOOL
properties O
and O
they O
together O
identify O
the O
path B-FEATURE
where O
data B-DATA
will O
be O
stored O
on O
the O
remote B-SYSTEM
server I-SYSTEM

With O
this O
syntax O
log B-DATA
files I-DATA
will O
be O
grouped O
by O
hostname B-FEATURE
aka O
the O
computer B-FEATURE
name I-FEATURE
sending O
the O
log B-DATA
and O
then O
by O
syslog B-TOOL
facility B-SYSTEM
kern B-APP
user B-USER
auth B-FEATURE
etc O

Now O
you O
can O
restart B-FUNCTION
the O
rsyslog B-SYSTEM
server I-SYSTEM
and O
make O
sure O
that O
it O
is O
now O
listening B-FEATURE
on O
the O
port B-FEATURE
514 I-FEATURE
for O
TCP B-FEATURE

With O
this O
configuration B-DATA
file I-DATA
server B-SYSTEM
logs B-DATA
are O
no O
longer O
directly O
stored O

hostname B-FEATURE
being O
the O
current O
name O
of O
the O
host B-SYSTEM

Now O
let�s O
configure B-FUNCTION
rsyslog B-TOOL
as O
a O
client B-SYSTEM
and O
on O
the O
client B-SYSTEM
machine I-SYSTEM

Similarly O
to O
the O
procedure O
done O
on O
the O
server-side B-SYSTEM

Restart B-FUNCTION
the O
rsyslog B-SYSTEM
server I-SYSTEM
and O
make O
sure O
that O
there O
are O
no O
errors B-DATA
on O
the O
client-side B-SYSTEM

