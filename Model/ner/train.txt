Attacks B-ATTACK
can O
damage O
public B-SYSTEM
domain I-SYSTEM

IDS B-TOOL
means O
Intrusion B-TECHNIQUE
Detection I-TECHNIQUE

Snort B-TOOL
is O
used O
for O
Intrusion B-TECHNIQUE
Detection I-TECHNIQUE

Snort B-TOOL
can O
detect O
network B-ATTACK
attacks I-ATTACK

Snort B-TOOL
can O
also O
be O
used O
as O
a O
simple O
packet B-TOOL
logger I-TOOL

Snort B-TOOL
can O
analyze O
real O
time O
traffic B-DATA

Snort B-TOOL
can O
analyze O
real O
time O
data B-FEATURE
flow I-FEATURE

Snort B-TOOL
can O
check O
protocol B-TECHNIQUE
analysis I-TECHNIQUE

Snort B-TOOL
can O
detect B-TECHNIQUE
different O
types O
of O
attacks B-ATTACK

Snort B-TOOL
checks O
the O
packet B-DATA
against O
user B-FUNCTION
rules I-FUNCTION

Snort B-FUNCTION
rules I-FUNCTION
can O
be O
written O
in O
any O
language B-FEATURE

Snort B-FUNCTION
rules I-FUNCTION
have O
good O
structure O

Snort B-TOOL
match O
previous B-FEATURE
attack B-FEATURE
pattern B-FEATURE

Snort B-TOOL
checks O
the O
network B-FEATURE
behavior B-FEATURE

Snort B-TOOL
can O
discard O
the O
bad B-DATA
packet I-DATA

Snort B-TOOL
has O
a O
Packet B-TOOL
Decoder I-TOOL

Packet B-TOOL
Decoder I-TOOL
forms O
the O
packets B-DATA

Packet B-TOOL
Decoder I-TOOL
determines O
the O
underlying O
protocols B-FEATURE

Packet B-TOOL
Decoder I-TOOL
determines O
packet B-DATA
data B-FEATURE
size I-FEATURE

Packet B-TOOL
Decoder I-TOOL
looks O
for O
header B-VULNERABILITY
anomalies I-VULNERABILITY

Snort B-TOOL
has O
a O
Preprocessor B-TOOL

Preprocessor B-TOOL
verify O
HTTP B-VULNERABILITY
anomalies I-VULNERABILITY

Preprocessor B-TOOL
verify O
FTP B-VULNERABILITY
anomalies I-VULNERABILITY

Preprocessor B-TOOL
can O
modify O
packet B-DATA
data I-DATA

Snort B-TOOL
has O
Detection B-TOOL
Engine I-TOOL

Detection B-TOOL
Engine I-TOOL
detects B-TECHNIQUE
intrusion B-ATTACK
in O
packet B-DATA

Detection B-TOOL
Engine I-TOOL
chains O
the O
rules B-FUNCTION

Snort B-TOOL
has O
Log B-TOOL
Alert I-TOOL
system I-TOOL

Snort B-TOOL
has O
Output B-TOOL
Module I-TOOL

Output B-TOOL
Module I-TOOL
controls O
output B-FEATURE
type B-FEATURE

Output B-TOOL
Module I-TOOL
sends O
alerts B-FEATURE

Snort B-TOOL
set O
into O
Sniff B-FEATURE
mode I-FEATURE

Snort B-TOOL
can O
sniff B-TECHNIQUE
the O
Ingress B-FEATURE

Snort B-TOOL
can O
sniff B-TECHNIQUE
the O
Egress B-FEATURE

Ingress B-FEATURE
captures O
incoming B-DATA
traffic I-DATA

Snort B-TOOL
sniffs B-TECHNIQUE
firewall B-DATA
traffic I-DATA

Snort B-TOOL
has O
packet B-TOOL
logger I-TOOL

The O
packet B-TOOL
logger I-TOOL
collects O
data B-DATA
as O
file B-DATA

Snort B-TOOL
can O
output O
tcpdump B-DATA
pcap I-DATA

Snort B-TOOL
can O
output O
unified2 B-TOOL

Wireshark B-TOOL
can O
read O
tcpdump B-DATA
pcap I-DATA

Detection B-TOOL
alert I-TOOL
is O
added O
to O
IP B-DATA
packets I-DATA

Snort B-FUNCTION
rules I-FUNCTION
is O
tested O
using O
icmp B-FUNCTION
rules I-FUNCTION

Snort B-FUNCTION
rules I-FUNCTION
is O
tested O
using O
system B-DATA
variables I-DATA

system B-DATA
variables I-DATA
can O
be O
edited O
in O
conf B-DATA
file I-DATA

system B-DATA
variables I-DATA
can O
be O
set O
as O
home B-SYSTEM
network I-SYSTEM

system B-DATA
variables I-DATA
can O
be O
set O
external B-SYSTEM
network I-SYSTEM

Snort B-FUNCTION
rules I-FUNCTION
is O
tested O
using O
payload B-FEATURE
options I-FEATURE

payload B-FEATURE
options I-FEATURE
shows O
captured O
data B-DATA

Snort B-FUNCTION
rules I-FUNCTION
is O
tested O
using O
non B-FEATURE
payload I-FEATURE
options I-FEATURE

Network B-SYSTEM
is O
set O
as O
client B-SYSTEM
gateway I-SYSTEM
server I-SYSTEM

Packet B-FEATURE
forwarding I-FEATURE
enabled O
on O
Gateway B-SYSTEM

Firewall B-TOOL
set O
to O
sniff B-TECHNIQUE
server B-SYSTEM

Firewall B-TOOL
disabled O
for O
testing B-FUNCTION

Blacklist B-FEATURE
enabled O
for O
testing B-FUNCTION

Land B-ATTACK
Attack I-ATTACK
sends O
spoofed B-VULNERABILITY
TCP B-DATA
SYN I-DATA
Packets I-DATA

Nmap B-TOOL
is O
an O
open B-FEATURE
source I-FEATURE
tool B-TOOL

Nmap B-TOOL
is O
used O
for O
network B-TECHNIQUE
discovery I-TECHNIQUE

Nmap B-TOOL
is O
used O
for O
security B-TECHNIQUE
auditing I-TECHNIQUE

Nmap B-TOOL
displays O
exposed B-VULNERABILITY
services B-APP
on O
a O
target B-SYSTEM
machine I-SYSTEM
along O
with O
other O
useful O
information B-DATA
such O
as O
the O
version B-TECHNIQUE
and O
OS B-TECHNIQUE
detection I-TECHNIQUE

Use O
nmap B-TOOL
to O
send O
customized O
packets B-DATA
for O
network B-TECHNIQUE
diagnostic I-TECHNIQUE
and O
testing B-FUNCTION

Use O
nmap B-TOOL
to O
send O
customized O
packets B-DATA
for O
emulating O
attacks B-ATTACK

Nmap B-TOOL
is O
a O
network B-FEATURE
mapper I-FEATURE
that O
has O
emerged O
as O
one O
of O
the O
most O
popular O
free O
network B-TECHNIQUE
discovery I-TECHNIQUE
tools B-TOOL
on O
the O
market O

Nmap B-TOOL
is O
now O
one O
of O
the O
core O
tools B-TOOL
used O
by O
network B-SECURITYTEAM
administrators I-SECURITYTEAM
to O
map B-FUNCTION
their O
networks B-SYSTEM

The O
program B-FUNCTION
can O
find O
live B-SYSTEM
hosts I-SYSTEM
on O
a O
network B-SYSTEM
perform O
port B-TECHNIQUE
scanning I-TECHNIQUE
ping B-TECHNIQUE
sweeps I-TECHNIQUE
OS B-TECHNIQUE
detection I-TECHNIQUE
and O
version B-TECHNIQUE
detection I-TECHNIQUE

What O
is O
Nmap B-TOOL

Nmap B-TOOL
is O
a O
network B-TECHNIQUE
scanning I-TECHNIQUE
tool B-TOOL
that O
uses O
IP B-DATA
packets I-DATA
to O
identify O
all O
the O
devices B-SYSTEM
connected O
to O
a O
network B-SYSTEM
and O
provide O
information B-DATA
on O
the O
services B-APP
and O
operating B-SYSTEM
systems I-SYSTEM
they O
are O
running O

The O
program O
is O
most O
commonly O
used O
via O
a O
command-line B-TOOL
interface I-TOOL
though O
GUI B-TOOL
front-ends I-TOOL
are O
also O
available O

It O
is O
available O
for O
many O
different O
operating B-SYSTEM
systems I-SYSTEM
such O
as O
Linux B-SYSTEM
Free B-SYSTEM
BSD I-SYSTEM
and O
Gentoo B-SYSTEM

Nmap B-TOOL
was O
developed O
for O
enterprise-scale B-SYSTEM
networks I-SYSTEM
and O
can O
scan B-FUNCTION
through O
thousands O
of O
connected B-SYSTEM
devices I-SYSTEM

Moreover O
Nmap B-TOOL
has O
been O
increasingly O
used O
to O
inspect O
IoT B-TECHNIQUE
security I-TECHNIQUE

Nmap B-TOOL
provides O
information B-DATA
on O
every O
active B-FEATURE
IP B-FEATURE
so O
you O
can O
determine O
if O
an O
IP B-FEATURE
is O
being O
used O
by O
a O
legitimate B-FEATURE
service B-APP
or O
an O
external B-ATTACKER
attacker I-ATTACKER

Your O
network B-SYSTEM
as O
a O
whole O
including O
live B-SYSTEM
hosts I-SYSTEM
open B-FEATURE
ports I-FEATURE
and O
the O
OS B-SYSTEM
of O
every O
connected B-SYSTEM
device I-SYSTEM

Vulnerabilities B-VULNERABILITY
scan B-FUNCTION
your O
own O
server B-SYSTEM
to O
simulate O
the O
process B-TECHNIQUE
that O
a O
hacker B-ATTACKER
would O
use O
to O
attack B-ATTACK
your O
site B-SYSTEM

The O
primary O
uses O
of O
Nmap B-TOOL
can O
be O
broken O
into O
three O
core O
processes B-TECHNIQUE

First O
the O
program O
gives O
you O
detailed O
information B-DATA
on O
every O
IP B-FEATURE
active B-FEATURE
on O
your O
networks B-SYSTEM
and O
each O
IP B-FEATURE
can O
then O
be O
scanned B-FUNCTION

This O
allows O
administrators B-SECURITYTEAM
to O
check O
whether O
an O
IP B-FEATURE
is O
being O
used O
by O
a O
legitimate B-FEATURE
service I-FEATURE
or O
an O
external B-ATTACKER
attacker I-ATTACKER

Secondly O
Nmap B-TOOL
provides O
information B-DATA
on O
your O
network B-SYSTEM
as O
a O
whole O

It O
can O
be O
used O
to O
provide O
a O
list O
of O
live B-SYSTEM
hosts I-SYSTEM
and O
open B-FEATURE
ports I-FEATURE
and O
identify O
the O
OS B-SYSTEM
of O
every O
connected B-SYSTEM
device I-SYSTEM

This O
makes O
it O
a O
valuable O
tool B-TOOL
in O
ongoing O
system B-TECHNIQUE
monitoring I-TECHNIQUE
and O
a O
critical O
part O
of O
pentesting B-TECHNIQUE

Nmap B-TOOL
can O
be O
used O
alongside O
the O
Metasploit B-TOOL
framework I-TOOL
for O
instance O
to O
probe B-TECHNIQUE
and O
then O
repair O
network B-VULNERABILITY
vulnerabilities I-VULNERABILITY

Thirdly O
Nmap B-TOOL
has O
also O
become O
a O
valuable O
tool B-TOOL
for O
users B-USER
looking O
to O
protect O
personal B-SYSTEM
and O
business B-SYSTEM
websites I-SYSTEM

Using O
Nmap B-TOOL
to O
scan B-TECHNIQUE
your O
own O
web B-SYSTEM
server I-SYSTEM
particularly O
if O
you O
are O
hosting B-FEATURE
your O
website B-SYSTEM
from O
home B-SYSTEM
is O
essentially O
simulating O
a O
hacker B-ATTACKER
process B-TECHNIQUE
to O
attack B-ATTACK
your O
site B-SYSTEM

Attacking B-ATTACK
your O
own O
site B-SYSTEM
in O
this O
way O
is O
a O
powerful O
way O
of O
identifying O
security B-VULNERABILITY
vulnerabilities I-VULNERABILITY

Nmap B-TOOL
is O
straightforward O
to O
use O
and O
most O
of O
the O
tools B-TOOL
it O
provides O
are O
familiar O
to O
system B-SECURITYTEAM
admins I-SECURITYTEAM
from O
other O
programs B-FUNCTION

Nmap B-TOOL
advantage O
is O
that O
it O
brings O
a O
wide O
range O
of O
these O
tools B-TOOL
into O
one O
program B-FUNCTION
rather O
than O
forcing O
you O
to O
skip O
between O
separate O
and O
discrete O
network B-TECHNIQUE
monitoring I-TECHNIQUE
tools B-TOOL

To O
use O
Nmap B-TOOL
you O
need O
to O
be O
familiar O
with O
command-line B-TOOL
interfaces I-TOOL

Most O
advanced O
users B-USER
can O
write O
scripts B-FUNCTION
to O
automate B-FEATURE
common O
tasks O
but O
this O
is O
unnecessary O
for O
basic O
network B-TECHNIQUE
monitoring I-TECHNIQUE

TCP B-TECHNIQUE
Full I-TECHNIQUE
Connect I-TECHNIQUE
Vanilla I-TECHNIQUE
Scan I-TECHNIQUE

we O
assume O
that O
the O
scanning B-TECHNIQUE
targetï¿½s B-SYSTEM
IP B-FEATURE
address I-FEATURE

TCP B-TECHNIQUE
Connect I-TECHNIQUE
scan I-TECHNIQUE
completes O
the O
3-way B-TECHNIQUE
handshake I-TECHNIQUE

If O
a O
port B-FEATURE
is O
open B-FEATURE
the O
operating B-SYSTEM
system I-SYSTEM
completed O
the O
TCP B-FEATURE
three-way B-TECHNIQUE
handshake I-TECHNIQUE
and O
the O
port B-TOOL
scanner I-TOOL
immediately O
closes O
the O
connection B-FEATURE
to O
avoid O
DOS B-ATTACK

This O
is O
noisy B-FEATURE
because O
the O
services B-FEATURE
can O
log B-FUNCTION
the O
sender B-SYSTEM
IP B-FEATURE
address I-FEATURE
and O
trigger O
Intrusion B-TOOL
Detection I-TOOL
Systems I-TOOL

the O
Full B-TECHNIQUE
scan I-TECHNIQUE
has O
the O
following O
features O

Attempts O
to O
completes O
3-way B-TECHNIQUE
handshake I-TECHNIQUE
with O
each O
scanned B-VULNERABILITY
port B-FEATURE

Sends B-FUNCTION
SYN B-FEATURE
and O
waits O
for O
ACK B-FEATURE
before O
sending B-FUNCTION
ACK B-FEATURE

Tears B-FEATURE
down I-FEATURE
connection B-FEATURE
using O
FIN B-DATA
packets I-DATA

If O
target B-FEATURE
port I-FEATURE
is O
closed B-FEATURE
sender B-SYSTEM
will O
received B-FUNCTION
either O
no O
response B-FEATURE
a O
RESET B-DATA
packet I-DATA
or O
an O
ICMP B-DATA
Port I-DATA
Unreachable I-DATA
packet I-DATA

Not O
stealthy B-VULNERABILITY
the O
connection B-FEATURE
request I-FEATURE
can O
be O
logged B-FUNCTION

UDP B-TECHNIQUE
scan I-TECHNIQUE
checks O
to O
see O
if O
any O
UDP B-FEATURE
ports I-FEATURE
are O
listening B-FEATURE

Since O
UDP B-FEATURE
does O
not O
respond B-FEATURE
with O
a O
positive B-FEATURE
acknowledgment I-FEATURE
like O
TCP B-FEATURE
and O
only O
responds B-FEATURE
to O
an O
incoming B-FEATURE
UDP B-DATA
packet I-DATA
when O
the O
port B-FEATURE
is O
closed B-FEATURE
this O
type O
of O
scan B-TECHNIQUE
can O
sometimes O
show O
FALSE B-FEATURE
positives I-FEATURE

However O
it O
can O
also O
reveal B-FEATURE
Trojan B-ATTACK
horses I-ATTACK
running O
on O
high B-FEATURE
UDP I-FEATURE
ports I-FEATURE
and O
hidden B-VULNERABILITY
RPC I-VULNERABILITY
services I-VULNERABILITY

It O
may O
be O
quite O
slow O
since O
some O
machines B-SYSTEM
intentionally O
slow B-FEATURE
down I-FEATURE
responses I-FEATURE
to O
this O
kind O
of O
traffic B-DATA
to O
avoid O
being O
overwhelmed O

Machines B-SYSTEM
running O
Windows B-SYSTEM
OS I-SYSTEM
however O
do O
not O
implement O
this O
slowdown B-FEATURE
feature I-FEATURE
so O
you O
should O
use O
UDP B-FEATURE
to O
scan B-TECHNIQUE
Windows B-SYSTEM
hosts B-SYSTEM
normally O

The O
UDP B-TECHNIQUE
Scan I-TECHNIQUE
sends O
a O
UDP B-DATA
packet I-DATA
to O
target B-FEATURE
ports I-FEATURE
to O
determine O
if O
a O
UDP B-FEATURE
service I-FEATURE
is O
listening B-FEATURE

If O
the O
target B-SYSTEM
system I-SYSTEM
returns O
an O
ICMP B-DATA
Port I-DATA
Unreachable I-DATA
message I-DATA
the O
target B-FEATURE
port I-FEATURE
is O
closed B-FEATURE
Otherwise O
the O
target B-FEATURE
port I-FEATURE
is O
assumed O
to O
be O
open B-FEATURE

UDP B-TECHNIQUE
scan I-TECHNIQUE
is O
unreliable O
since O
there O
may O
be O
FALSE B-FEATURE
positives I-FEATURE

The O
UDP B-TECHNIQUE
scan I-TECHNIQUE
can O
be O
very O
slow B-FEATURE
due O
to O
the O
following O
reasons O

Open B-FEATURE
and O
filtered B-FEATURE
ports I-FEATURE
rarely O
send B-FUNCTION
any O
response B-FEATURE
leaving O
Nmap B-TOOL
to O
time B-FEATURE
out I-FEATURE

Closed B-FEATURE
ports I-FEATURE
usually O
send O
back O
an O
ICMP B-DATA
port I-DATA
unreachable I-DATA
error I-DATA
But O
many O
hosts B-SYSTEM
rate B-TECHNIQUE
limit I-TECHNIQUE
ICMP B-DATA
port I-DATA
unreachable I-DATA
messages I-DATA
by O
default B-FEATURE
eg O
1/sec O

To O
speed O
up O
the O
UDP B-TECHNIQUE
scan I-TECHNIQUE
Increase O
host B-FEATURE
parallelism O
use B-FEATURE
min-hostgroup I-FEATURE
to O
scan B-TECHNIQUE
multiple O
hosts B-SYSTEM
at O
once O

Scan B-TECHNIQUE
popular O
ports B-FEATURE
first O
using O
the O
F O
option O
to O
scan B-TECHNIQUE
the O
most O
common O
UDP B-FEATURE
ports I-FEATURE

Add O
version-intensity B-FEATURE
0 O
to O
version B-TECHNIQUE
detection I-TECHNIQUE
scans B-TECHNIQUE

Scan B-TECHNIQUE
from O
behind B-FEATURE
the I-FEATURE
firewall I-FEATURE

Use O
host-timeout B-FEATURE
to O
skip O
slow B-SYSTEM
hosts I-SYSTEM

Use O
v O
verbosity B-FEATURE
and O
chill B-FEATURE
out I-FEATURE
Nmap B-TOOL
provides O
estimated O
time O
for O
scan B-TECHNIQUE
completion O
of O
each O
host B-SYSTEM

SYN B-TECHNIQUE
scan I-TECHNIQUE
is O
another O
form O
of O
TCP B-TECHNIQUE
scanning I-TECHNIQUE

Rather O
than O
using O
the O
operating B-SYSTEM
systemï¿½s I-SYSTEM
network B-FUNCTION
functions I-FUNCTION
the O
port B-TOOL
scanner I-TOOL
generates O
raw B-DATA
IP I-DATA
packets I-DATA
and O
monitors B-TECHNIQUE
for O
responses B-FEATURE

This O
scan B-TECHNIQUE
type O
is O
also O
known O
as O
half-open B-TECHNIQUE
scanning I-TECHNIQUE
because O
it O
never O
actually O
opens B-FEATURE
a O
full B-FEATURE
TCP I-FEATURE
connection I-FEATURE

The O
port B-TOOL
scanner I-TOOL
generates O
a O
SYN B-DATA
packet I-DATA

If O
the O
target B-FEATURE
port I-FEATURE
is O
open B-FEATURE
it O
will O
respond B-FEATURE
with O
an O
SYN-ACK B-DATA
packet I-DATA

The O
scanner B-TOOL
host B-SYSTEM
responds B-FEATURE
with O
an O
RST B-DATA
packet I-DATA
closing B-FEATURE
the O
connection B-FEATURE
before O
the O
handshake B-TECHNIQUE
is O
completed O

If O
the O
port B-FEATURE
is O
closed B-FEATURE
but O
unfiltered B-FEATURE
the O
target B-SYSTEM
will O
instantly O
respond B-FEATURE
with O
an O
RST B-DATA
packet I-DATA

There O
is O
debate O
over O
which O
scan B-TECHNIQUE
is O
less O
intrusive B-ATTACK
on O
the O
target B-SYSTEM
host I-SYSTEM

SYN B-TECHNIQUE
scan I-TECHNIQUE
has O
the O
advantage O
that O
the O
individual O
services B-FEATURE
never O
actually O
receive B-FUNCTION
a O
connection B-FEATURE

Only O
sends O
the O
initial O
SYN B-FEATURE
and O
waits O
for O
ACK B-FEATURE
to O
detect B-TECHNIQUE
open B-FEATURE
port I-FEATURE

SYN B-TECHNIQUE
scans I-TECHNIQUE
stop O
two-thirds O
of O
the O
way O
through O
the O
3-way B-TECHNIQUE
handshake I-TECHNIQUE
aka O
half-open B-TECHNIQUE
scan I-TECHNIQUE

Attacker B-ATTACKER
sends O
a O
RESET B-FEATURE
RST I-FEATURE
after O
receiving B-FEATURE
an O
SYN-ACK B-FEATURE
response I-FEATURE

A O
TRUE O
connection B-FEATURE
is O
never O
established B-FEATURE
thus O
the O
target B-SYSTEM
may O
not O
log B-FUNCTION
the O
connection B-FEATURE

Faster O
and O
stealthier B-VULNERABILITY
than O
a O
full B-TECHNIQUE
TCP I-TECHNIQUE
Connect I-TECHNIQUE
scans I-TECHNIQUE

If O
the O
target B-FEATURE
port I-FEATURE
is O
closed B-FEATURE
the O
destination B-SYSTEM
will O
send O
a O
RESET B-FEATURE
or O
nothing O

SYN B-ATTACK
flood I-ATTACK
may O
cause O
accidental B-ATTACK
denial-of-service B-ATTACK
attacks I-ATTACK
if O
the O
target B-SYSTEM
is O
slow B-FEATURE

FIN B-TECHNIQUE
scan I-TECHNIQUE
is O
a O
stealthy B-TECHNIQUE
scan I-TECHNIQUE
like O
the O
SYN B-TECHNIQUE
scan I-TECHNIQUE
but O
sends B-FUNCTION
a O
TCP B-DATA
FIN I-DATA
packet I-DATA
instead O

Most O
but O
not O
all O
computers O
will O
send O
an O
RST B-DATA
packet I-DATA
back O
if O
they O
get O
this O
input B-FEATURE
so O
that O
the O
FIN B-TECHNIQUE
scan I-TECHNIQUE
can O
show O
FALSE B-FEATURE
positives I-FEATURE
and O
negatives B-FEATURE
but O
it O
may O
get O
under O
the O
radar O
of O
some O
IDS B-TOOL
programs B-FUNCTION
and O
other O
countermeasures O

Ack B-TECHNIQUE
scanning I-TECHNIQUE
determines O
whether O
the O
port B-FEATURE
is O
filtered B-FEATURE
or O
not O

This O
is O
especially O
good O
when O
attempting O
to O
probe B-TECHNIQUE
for O
the O
existence O
of O
a O
firewall B-TOOL
and O
its O
rulesets B-FUNCTION

Simple O
packet B-TECHNIQUE
filtering I-TECHNIQUE
will O
allow O
established B-FEATURE
connections I-FEATURE
packets B-DATA
with O
the O
ACK I-DATA
bit I-DATA
set O
whereas O
a O
more O
sophisticated O
stateful B-FEATURE
firewall B-TOOL
might O
not O

ACK B-TECHNIQUE
scan I-TECHNIQUE
Sends O
a O
packet B-DATA
with O
the O
ACK B-DATA
code I-DATA
bit I-DATA
set I-DATA
to O
each O
target B-FEATURE
port I-FEATURE

Allows O
the O
attacker B-ATTACKER
to O
get O
past O
some O
packet B-TECHNIQUE
filtering I-TECHNIQUE
devices B-SYSTEM

Allows O
the O
attacker B-ATTACKER
to O
determine O
what O
kind O
of O
established B-FEATURE
connections I-FEATURE
a O
firewall B-TOOL
or O
router B-SYSTEM
will O
allow O
into O
a O
network B-SYSTEM
by O
determining O
which O
ports B-FEATURE
through O
a O
firewall B-TOOL
allow O
established B-FEATURE
connection I-FEATURE
responses B-FEATURE

If O
no O
response B-FEATURE
or O
an O
ICMP B-DATA
Port I-DATA
Unreachable I-DATA
message I-DATA
is O
returned O
Nmap B-TOOL
will O
label O
the O
target B-FEATURE
port I-FEATURE
as O
filtered B-FEATURE
meaning O
that O
a O
packet B-TECHNIQUE
filter I-TECHNIQUE
is O
blocking B-FEATURE
the O
response B-FEATURE

Another O
very O
stealthy B-TECHNIQUE
scan I-TECHNIQUE
that O
sets O
all O
the O
TCP B-FEATURE
header I-FEATURE
flags I-FEATURE
to O
off O
or O


This O
is O
not O
normally O
a O
valid O
packet B-DATA
and O
some O
hosts B-SYSTEM
will O
not O
know O
what O
to O
do O
with O
this O

Windows B-SYSTEM
operating I-SYSTEM
systems I-SYSTEM
are O
in O
this O
group O
and O
scanning B-TECHNIQUE
them O
with O

scans I-TECHNIQUE
will O
produce O
unreliable O
results O

However O
for O
non-Windows B-SYSTEM
servers I-SYSTEM
protected O
by O
a O
firewall B-TOOL
this O
can O
be O
a O
way O
to O
get O
through O

XMAS B-TECHNIQUE
scan I-TECHNIQUE
is O
similar O
to O
the O

scan I-TECHNIQUE
except O
for O
all O
the O
flags B-FEATURE
in O
the O
TCP B-FEATURE
header I-FEATURE
is O
set O
to O
on O

Windows B-SYSTEM
machines I-SYSTEM
wont O
respond B-FEATURE
to O
this O
due O
to O
the O
way O
their O
TCP B-FEATURE
stack I-FEATURE
is O
implemented O

Xmas O
scans O
derive O
their O
name O
from O
the O
set O
of O
flags B-FEATURE
that O
are O
turned O
on O
within O
a O
packet B-DATA

These O
scans B-TECHNIQUE
are O
designed O
to O
manipulate O
the O
PSH B-FEATURE
URG B-FEATURE
and O
FIN B-FEATURE
flags I-FEATURE
of O
the O
TCP B-FEATURE
header I-FEATURE

RPC B-TECHNIQUE
scan I-TECHNIQUE
is O
special O
type O
of O
scan B-TECHNIQUE
looks O
for O
machines B-SYSTEM
answering O
to O
RPC B-FUNCTION
Remote B-FUNCTION
Procedure I-FUNCTION
Call I-FUNCTION
services B-APP

RPC B-FUNCTION
which O
allows O
remote B-FUNCTION
commands I-FUNCTION
to O
be O
run O
on O
the O
machine B-SYSTEM
under O
certain O
conditions O
can O
be O
a O
dangerous O
service B-FEATURE

Since O
RPC B-APP
services I-APP
can O
run O
on O
many O
different O
ports B-FEATURE
it O
is O
hard O
to O
tell O
from O
a O
normal O
scan B-TECHNIQUE
which O
ones O
might O
be O
running O
RPC B-FUNCTION

This O
scan B-TECHNIQUE
will O
probe B-TECHNIQUE
the O
ports B-FEATURE
found O
open B-FEATURE
on O
a O
machine B-SYSTEM
with O
commands B-FUNCTION
to O
show O
the O
program B-FUNCTION
name B-FEATURE
and O
version B-FEATURE
if O
RPC B-FUNCTION
is O
running O

It O
not O
a O
bad O
idea O
to O
run B-FUNCTION
one O
of O
these O
scans B-TECHNIQUE
every O
often O
to O
find O
out O
if O
and O
where O
you O
have O
these O
services B-FEATURE
running B-FUNCTION

Scans B-TECHNIQUE
RPC B-APP
services I-APP
using O
all O
discovered O
open B-FEATURE
TCP/UDP B-FEATURE
ports I-FEATURE
on O
the O
target B-SYSTEM
to O
send O
RPC B-FUNCTION

commands I-FUNCTION

Tries O
to O
determine O
if O
an O
RPC B-FUNCTION
program B-FUNCTION
is O
listening B-FEATURE
at O
the O
port B-FEATURE
and O
identifies O
type O
of O
RPC B-FUNCTION
program B-FUNCTION

IDLE B-TECHNIQUE
scan I-TECHNIQUE
is O
a O
super O
stealthy B-TECHNIQUE
method I-TECHNIQUE
whereby O
the O
scan B-TECHNIQUE
packets B-DATA
are O
bounced O
off O
an O
external B-SYSTEM
host I-SYSTEM

You O
donï¿½t O
need O
to O
have O
control O
over O
the O
other O
host B-SYSTEM
but O
it O
does O
have O
to O
set O
up O
and O
meet O
certain O
requirements B-FEATURE

You O
must O
input O
the O
IP B-FEATURE
address I-FEATURE
of O
our O
zombie B-SYSTEM
host I-SYSTEM
and O
what O
port B-FEATURE
number I-FEATURE
to O
use O

It O
is O
one O
of O
the O
more O
controversial O
options O
in O
Nmap B-TOOL
since O
it O
really O
only O
has O
a O
use O
for O
malicious B-ATTACK
attacks I-ATTACK

Probe B-TECHNIQUE
the O
zombie B-SYSTEM
IP B-FEATURE
ID I-FEATURE
and O
record O
it O
Forge B-VULNERABILITY
an O
SYN B-DATA
packet I-DATA
from O
the O
zombie B-SYSTEM
and O
send O
it O
to O
the O
desired O
port B-FEATURE
on O
the O
target B-SYSTEM

Depending O
on O
the O
port B-FEATURE
state I-FEATURE
the O
target B-SYSTEM
reaction O
may O
or O
may O
not O
cause O
the O
zombie B-SYSTEM
IP B-FEATURE
ID I-FEATURE
to O
be O
incremented O

Probe B-TECHNIQUE
the O
zombie B-SYSTEM
IP B-FEATURE
ID I-FEATURE
again O
The O
target B-SYSTEM
port B-FEATURE
state I-FEATURE
is O
then O
determined O
by O
comparing O
this O
new O
IP B-FEATURE
ID I-FEATURE

NSE B-TOOL
stands O
for O
Nmap B-TOOL
Scripting I-TOOL
Engine I-TOOL

and O
it O
is O
basically O
a O
digital O
library O
of O
Nmap B-FUNCTION
scripts I-FUNCTION
that O
help O
enhance O
the O
default B-FEATURE
Nmap B-TOOL
features B-FEATURE
and O
report O
the O
results O
in O
a O
traditional O
Nmap B-TOOL
output B-FEATURE

You O
can O
also O
write O
and O
share O
your O
own O
scripts B-FUNCTION
so O
you're O
not O
limited O
to O
relying O
on O
the O
Nmap B-TOOL
default B-FEATURE
NSE B-FUNCTION
scripts I-FUNCTION

The O
only O
requirement O
for O
you O
to O
write O
these O
scripts B-FUNCTION
is O
that O
they O
must O
be O
coded O
using O
the O
Lua B-TOOL
programming I-TOOL
language I-TOOL

Four O
different O
types O
can O
help O
us O
enhance O
the O
default B-FEATURE
Nmap B-TOOL
features O
depending O
on O
the O
target B-SYSTEM
and O
the O
scanning B-TECHNIQUE
phase O
in O
which O
they O
are O
run B-FUNCTION

Prerule B-FUNCTION
scripts I-FUNCTION
are O
types O
of O
scripts B-FUNCTION
run O
before O
the O
rest O
of O
any O
scanning B-TECHNIQUE
operation O
while O
Nmap B-TOOL
doesnï¿½t O
have O
any O
data B-DATA
about O
the O
remote B-SYSTEM
target I-SYSTEM

Once O
the O
Nmap B-TOOL
default B-FEATURE
scan B-TECHNIQUE
has O
finished O
the O
host B-SYSTEM
exploration B-TECHNIQUE
detection B-TECHNIQUE
port B-TECHNIQUE
scanning I-TECHNIQUE
or O
software B-TECHNIQUE
discovery I-TECHNIQUE
it O
will O
perform O
the O
host B-FUNCTION
scripts I-FUNCTION

Service B-FUNCTION
scripts I-FUNCTION
are O
a O
particular O
set O
of O
Nmap B-FUNCTION
scripts I-FUNCTION
that O
are O
run B-FUNCTION
against O
services B-FEATURE
on O
the O
remote B-SYSTEM
host I-SYSTEM

These O
include O
HTTP B-FUNCTION
service I-FUNCTION
scripts I-FUNCTION
for O
example O
which O
can O
be O
run B-FUNCTION
against O
web B-SYSTEM
servers I-SYSTEM

Postrule B-FUNCTION
scripts I-FUNCTION
are O
run B-FUNCTION
after O
the O
entire O
Nmap B-TECHNIQUE
scan I-TECHNIQUE
has O
finished O
and O
are O
often O
useful O
for O
parsing B-FUNCTION
formatting B-FUNCTION
and O
presenting O
the O
different O
results O

When O
dealing O
with O
over O
600 O
default B-FEATURE
Nmap B-FUNCTION
scripts I-FUNCTION
it O
is O
not O
easy O
to O
find O
the O
most O
popular O
ones O
by O
inspecting O
them O
one O
by O
one O

auth B-FUNCTION
script I-FUNCTION
- O
All O
sorts O
of O
authentication B-TECHNIQUE
and O
user B-FEATURE
privilege I-FEATURE
scripts B-FUNCTION

broadcast B-FUNCTION
script I-FUNCTION
- O
Network B-TECHNIQUE
discovery I-TECHNIQUE
scripts B-FUNCTION
that O
use O
broadcast B-FEATURE
petitions O
for O
intel B-SYSTEM
gathering O

brute B-FUNCTION
script I-FUNCTION
- O
Set O
of O
scripts B-FUNCTION
for O
performing O
brute B-ATTACK
force I-ATTACK
attacks I-ATTACK
to O
guess O
access B-FEATURE
credentials I-FEATURE

default B-FUNCTION
script I-FUNCTION
- O
The O
most O
popular O
Nmap B-FUNCTION
scripts I-FUNCTION
using O
sC O
by O
default B-FEATURE

discovery B-FUNCTION
script I-FUNCTION
- O
Scripts B-FUNCTION
related O
to O
network B-TECHNIQUE
discovery I-TECHNIQUE
service B-TECHNIQUE
discovery I-TECHNIQUE
and O
host B-TECHNIQUE
discovery I-TECHNIQUE

dos B-FUNCTION
script I-FUNCTION
- O
Denial B-ATTACK
of I-ATTACK
service I-ATTACK
attack I-ATTACK
scripts B-FUNCTION
used O
to O
test B-FUNCTION
and O
perform B-FUNCTION
DOS B-ATTACK
and O
floods B-ATTACK

exploit B-FUNCTION
script I-FUNCTION
- O
Used O
to O
perform O
service B-TECHNIQUE
exploitation I-TECHNIQUE
on O
different O
CVEs B-VULNERABILITY

external B-FUNCTION
script I-FUNCTION
- O
Scripts B-FUNCTION
that O
rely O
on O
3rd B-APP
party I-APP
services I-APP
or O
data B-DATA

fuzzer B-FUNCTION
script I-FUNCTION
- O
Used O
to O
perform B-FUNCTION
fuzzing B-ATTACK
attacks I-ATTACK
against O
apps B-APP
services B-APP
or O
networks B-SYSTEM

intrusive B-FUNCTION
script I-FUNCTION
- O
All O
the O
aggressiveï¿½ B-FEATURE
scripts B-FUNCTION
that O
cause O
a O
lot O
of O
network B-FEATURE
noise I-FEATURE

malware B-FUNCTION
script I-FUNCTION
- O
Malware B-TECHNIQUE
detections I-TECHNIQUE
and O
exploration B-TECHNIQUE
scripts B-FUNCTION

safe B-FUNCTION
script I-FUNCTION
- O
Safe B-FEATURE
and O
non-intrusive B-FEATURE
or O
noisy B-FEATURE
scripts B-FUNCTION

version B-FUNCTION
script I-FUNCTION
OS B-SYSTEM
service B-APP
and O
software B-TECHNIQUE
detection I-TECHNIQUE
scripts B-FUNCTION

vuln B-FUNCTION
script I-FUNCTION
- O
The O
Nmap B-TOOL
vuln B-VULNERABILITY
category O
includes O
vulnerability B-TECHNIQUE
detection I-TECHNIQUE
and O
exploitation B-TECHNIQUE
scripts B-FUNCTION

The O
following O
is O
the O
output B-FEATURE
of O
scanning B-TECHNIQUE
the O
Metasploitable B-SYSTEM
2 I-SYSTEM
host I-SYSTEM

Nmap B-TOOL
also O
allows O
you O
to O
run B-FUNCTION
scripts B-FUNCTION
using O
wildcards B-FUNCTION
meaning O
you O
can O
target O
multiple O
scripts B-FUNCTION
that O
finish O
or O
end O
up O
with O
any O
pattern O

For O
example O
if O
you O
want O
to O
run B-FUNCTION
all O
the O
scripts B-FUNCTION
that O
begin O
with O
FTPï¿½ B-FEATURE
you O
could O
use O
this O
syntax B-FEATURE

This O
is O
the O
perfect O
solution O
when O
you O
already O
know O
which O
script B-FUNCTION
is O
going O
to O
be O
used O

if O
we O
want O
to O
run O
the O
HTTP-brute B-FUNCTION
script I-FUNCTION
to O
perform O
brute B-FUNCTION
force I-FUNCTION
password B-FEATURE
auditing B-TECHNIQUE
against O
HTTP B-FEATURE
basic I-FEATURE
digest B-FUNCTION
and O
ntlm B-TECHNIQUE
authentication I-TECHNIQUE

NSE B-TOOL
has O
the O
ability O
to O
let O
you O
write O
your O
own O
scripts B-FUNCTION
and O
run B-FUNCTION
those O
scripts B-FUNCTION
locally B-FEATURE
in O
your O
operating B-SYSTEM
system I-SYSTEM

Firewall B-FEATURE
Intrusion B-TOOL
Prevention I-TOOL
Systems I-TOOL
IPS I-TOOL
and O
Intrusion B-TOOL
Detection I-TOOL
Systems I-TOOL
IDS I-TOOL
are O
only O
as O
robust O
as O
you O
configure B-FUNCTION
them O
for O
your O
perimeter B-TECHNIQUE
security I-TECHNIQUE
needs O

Where O
they O
reside O
on O
your O
network B-SYSTEM
how O
they O
interact O
and O
improving O
Penetration B-TECHNIQUE
Pen I-TECHNIQUE
Testing I-TECHNIQUE
services I-TECHNIQUE
is O
key O
to O
having O
a O
strong O
defensive B-TECHNIQUE
perimeter I-TECHNIQUE
for O
your O
organization B-SYSTEM

IDS B-TECHNIQUE
network I-TECHNIQUE
security I-TECHNIQUE
and O
IPS B-TECHNIQUE
security I-TECHNIQUE
along O
with O
Firewall B-TOOL
leveraging O
can O
help O
provide O
this O

Cyberinfrastructures B-SYSTEM
using O
prevention B-TECHNIQUE
platforms B-SYSTEM
require O
both O
regularly O
scheduled O
performance B-TECHNIQUE
assessments I-TECHNIQUE
and O
changing O
topology B-FEATURE
etc O

Most O
industry-standard O
institutes O
recommend O
even O
more O
frequent O
assessments B-TECHNIQUE

It O
is O
advised O
to O
change O
your O
current O
devices B-SYSTEM
around O
at O
a O
certain O
frequent O
level O

If O
they O
are O
always O
static B-FEATURE
on-going O
cybercriminals B-ATTACKER
learn O
how O
they O
always O
sit O
on O
your O
perimeter O
and O
eventually O
hack B-ATTACK
them O
after O
long O
periods O
in O
scanning B-TECHNIQUE
for O
weaknesses B-VULNERABILITY

When O
performing O
pentest B-TECHNIQUE
against O
your O
own O
networks B-SYSTEM
basically O
you O
are O
evading B-TECHNIQUE
your O
own O
security B-SYSTEM
systems I-SYSTEM

We O
usually O
refer O
to O
these O
self-targeted B-TECHNIQUE
evading I-TECHNIQUE
activities I-TECHNIQUE
as I-TECHNIQUE
ethical O
hacking B-TECHNIQUE
and I-TECHNIQUE
perform O
the O
pentesting O
as B-TECHNIQUE
ï¿½'white- O
hats' B-SECURITYTEAM

Pentesting B-TECHNIQUE
helps O
understand O
the O
danger O
of O
real O
attackers B-ATTACKER

If O
you O
can O
sneak O
around O
a O
blocked B-FEATURE
portmapper B-TOOL
port B-FEATURE
using O
Nmap B-TOOL
direct O
RPC B-TECHNIQUE
scanning I-TECHNIQUE
then O
so O
can O
the O
bad B-ATTACKER
guys I-ATTACKER

It O
is O
easy O
to O
make O
a O
mistake O
in O
configuring B-FUNCTION
complex O
firewalls B-TOOL
and O
other O
devices B-SYSTEM

Many O
of O
them O
even O
come O
with O
glaring O
security B-VULNERABILITY
holes I-VULNERABILITY
that O
conscientious O
users B-USER
must O
find O
and O
close O

Regular O
network B-TECHNIQUE
scanning I-TECHNIQUE
can O
help O
find O
dangerous O
implicit O
rules B-FUNCTION
before O
attackers B-ATTACKER
do O

There O
are O
good O
reasons O
for O
evading B-TECHNIQUE
IDS B-TOOL
as O
well O
Product B-TECHNIQUE
evaluation I-TECHNIQUE
is O
one O
of O
the O
most O
common O

If O
attackers B-ATTACKER
can O
slide O
under O
the O
radar O
by O
simply O
adding O
an O
Nmap B-TOOL
flag B-FEATURE
or O
two O
the O
system B-SYSTEM
does O
not O
offer O
much O
protection B-FEATURE

Pentesting B-TOOL
tools I-TOOL
such O
as O
Nmap B-TOOL
and O
Metasploit B-TOOL
offer O
many O
features O
for O
evading B-TECHNIQUE
firewall B-FUNCTION
rules I-FUNCTION
or O
sneaking B-TECHNIQUE
past I-TECHNIQUE
IDSs B-TOOL

These O
capabilities O
allow O
bad B-ATTACKER
guysï¿½ I-ATTACKER
to O
misuse O
it O
for O
evilï¿½ O
purposes O

However O
from O
the O
administrator B-SECURITYTEAM
perspectives O
mimicking O
attackers B-ATTACKER
behaviors O
and O
actions O
maybe O
the O
best O
that O
they O
can O
do O
to O
identify O
security B-VULNERABILITY
holes I-VULNERABILITY
before O
attackers B-ATTACKER
do O

This O
lab O
is O
by-no-mean O
the O
utterly O
and O
eagerly O
promoting O
Nmap B-TOOL
and O
Metasploit B-TOOL

It O
simply O
introduces O
the O
beginning O
level O
of O
cyber B-SECURITYTEAM
defenders I-SECURITYTEAM

to O
start O
their O
network B-TECHNIQUE
security I-TECHNIQUE
endeavors O
in O
the O
area O
of O
penetration B-TECHNIQUE
testing I-TECHNIQUE

since O
we O
know O
pentesting B-TECHNIQUE
represents O
the O
art O
of O
cybersecurity B-TECHNIQUE

deep O
understanding O
of O
the O
given O
security B-SYSTEM
system I-SYSTEM

The O
goal O
of O
this O
pentest B-TECHNIQUE
is O
to O
assess B-TECHNIQUE
the O
firewall B-FUNCTION
rule I-FUNCTION
setup B-SYSTEM
and O
IDS B-TOOL
system I-TOOL

In O
this O
pentest B-TECHNIQUE
we O
apply O
the O
white-box B-TECHNIQUE
testing I-TECHNIQUE
strategy I-TECHNIQUE
in O
which O
a O
white-box B-SECURITYTEAM
tester I-SECURITYTEAM
has O
the O
access O
and O
knowledge O
levels O
of O
the O
system B-SECURITYTEAM
admin I-SECURITYTEAM
including O
the O
knowledge O
of O
iptables B-FEATURE
firewall B-FUNCTION
rules I-FUNCTION
and O
snort B-FUNCTION
rules I-FUNCTION
setup B-SYSTEM

The O
goal O
of O
the O
pentest B-TECHNIQUE
is O
to O
explore O
the O
configuration B-FEATURE
issues O
of O
iptables B-FEATURE
and O
snort B-TOOL
ie O
identify O
the O
system B-SYSTEM
weakness B-VULNERABILITY
due O
to O
configuration B-VULNERABILITY
flaws I-VULNERABILITY

This O
means O
that O
the O
pen B-SECURITYTEAM
tester I-SECURITYTEAM
knows O
the O
iptables B-APP
and O
snort B-TOOL
configurations B-FEATURE
and O
networking B-SYSTEM
system I-SYSTEM
setup I-SYSTEM

During O
the O
pen B-TECHNIQUE
test I-TECHNIQUE
the O
pen B-SECURITYTEAM
tester I-SECURITYTEAM
can O
monitor B-TECHNIQUE
the O
actions O
or O
output B-FEATURE
of O
iptables B-FEATURE
and O
snort B-TOOL

The O
pen B-SECURITYTEAM
tester I-SECURITYTEAM
tries O
to O
explore B-TECHNIQUE
vulnerabilities B-VULNERABILITY
focusing O
on O
two O
areas O

System B-FEATURE
configurations I-FEATURE
- O
firewall B-TOOL
setup B-SYSTEM
such O
as O
open B-FEATURE
close B-FEATURE
filter B-FEATURE
unfilter B-FEATURE
ports B-FEATURE
reachable O
services B-APP
or O
nodes B-SYSTEM
firewall B-TOOL
performance B-TECHNIQUE
measurements I-TECHNIQUE
etc O

IDS B-TOOL
setup B-SYSTEM
such O
as O
detection B-FEATURE
threshold I-FEATURE
setup I-FEATURE
success O
and O
missed O
attack B-ATTACK
scenarios I-ATTACK
etc O

Vulnerabilities B-VULNERABILITY
There O
is O
one O
Metasploitable-2 B-SYSTEM
VM B-SYSTEM
running B-FUNCTION
behind O
the O
firewall B-TOOL

The O
pen B-SECURITYTEAM
tester I-SECURITYTEAM
is O
required O
to O
assess B-TECHNIQUE
the O
security B-TECHNIQUE
performance I-TECHNIQUE
of O
the O
firewall B-TOOL
and O
IDS B-TOOL
on O
successfully O
stop O
and/or O
detect B-TECHNIQUE
deployed B-FUNCTION
attacks B-ATTACK

Location: O
The O
pen B-SECURITYTEAM
tester I-SECURITYTEAM
explores O
the O
configuration B-VULNERABILITY
vulnerabilities I-VULNERABILITY
from O
outside O
ie O
on O
the O
client B-SYSTEM
network I-SYSTEM

Assessment B-TECHNIQUE
The O
pen B-SECURITYTEAM
tester I-SECURITYTEAM
needs O
to O
develop O
a O
pentest B-TECHNIQUE
report O
based O
on O
the O
provided O
template B-FEATURE
and O
provide O
suggested O
changes O
or O
remediation O
of O
firewall B-TOOL
and O
IDS B-TOOL
rules B-FUNCTION
to O
maximally O
improve O
the O
system B-TECHNIQUE
security I-TECHNIQUE

Note O
that O
the O
Metasploitable B-SYSTEM
2 I-SYSTEM
is O
used O
for O
assessing B-TECHNIQUE
the O
firewall B-TOOL
and O
IDS B-TOOL

Note O
that O
your O
pentest B-TECHNIQUE
focus O
is O
to O
inspect B-TECHNIQUE
and O
assess B-TECHNIQUE
the O
security B-TECHNIQUE
strength O
of O
the O
firewall B-TOOL
and O
IDS B-TOOL

Please O
do O
not O
try O
to O
resolve B-TECHNIQUE
any O
vulnerable B-VULNERABILITY
issues I-VULNERABILITY
running O
on O
Metasploitable B-SYSTEM
2 I-SYSTEM
which O
is O
purposely O
designed O
for O
pentesting B-TECHNIQUE

Tools: O
The O
pen B-SECURITYTEAM
tester I-SECURITYTEAM
can O
use O
various O
tools O
provided O
in O
the O
given O
client B-SYSTEM
VM I-SYSTEM
such O
as O
Nmap B-TOOL
hping3 B-TOOL
MSF B-TOOL
Metasploit I-TOOL
framework I-TOOL
tcpdump B-TOOL
etc O

It O
should O
be O
sufficient O
to O
use O
these O
tools B-TOOL
for O
this O
lab O

However O
you O
can O
use O
or O
develop O
your O
own O
tools B-TOOL
and O
testing B-FUNCTION
scripts B-FUNCTION
to O
perform B-FUNCTION
the O
security B-TECHNIQUE
testing I-TECHNIQUE

You O
should O
perform O
your O
pentesting B-TECHNIQUE
tasks O
on O
the O
client B-SYSTEM
machine I-SYSTEM

You O
can O
run O
various O
tools B-TOOL
such O
as O
ping B-TOOL
traceroute B-TOOL
nmap B-TOOL
hpings B-TOOL
msfconsole B-TOOL
etc O
on O
the O
client B-SYSTEM
node I-SYSTEM

Gateway B-SYSTEM
Node I-SYSTEM
Ubuntu B-SYSTEM
1804 I-SYSTEM
You O
need O
to O
run B-FUNCTION
iptables B-APP
firewall B-TOOL
and O
snort B-TOOL
to O
protect B-FEATURE
the O
server B-SYSTEM
node I-SYSTEM
based O
on O
provided O
iptables B-APP
and O
snort B-TOOL
configuration B-DATA
files I-DATA

You O
can O
download O
the O
iptables B-APP
configuration B-DATA
files I-DATA
and O
snort B-FUNCTION
rule I-FUNCTION
files B-DATA
using O
the O
following O
commands B-FUNCTION

They O
are O
shell B-FUNCTION
scripts I-FUNCTION

To O
make O
them O
executable O
you O
can O
change O
their O
permission B-FEATURE

you O
need O
to O
change O
the O
parameter B-FEATURE
setup I-FEATURE
at O
the O
beginning O
of O
the O
pentest B-TECHNIQUE
and O
reset B-FEATURE
based O
on O
your O
lab O
running O
environment O
ie O
three O
interfaces B-APP
and O
IP B-FEATURE
addresses I-FEATURE

make O
sure O
you O
have O
set O
up O
your O
default B-FEATURE
GW O
properly O
on O
each O
VM B-SYSTEM

Server B-SYSTEM
Node I-SYSTEM
Metastploitable B-SYSTEM
2 I-SYSTEM

details O
on O
Metasploitable B-SYSTEM
2 I-SYSTEM
especially O
the O
vulnerable B-VULNERABILITY
services B-APP
running O
on O
it O

You O
do O
not O
need O
to O
make O
any O
changes O
or O
adjustments O
on O
the O
provided O
Metasploitable B-SYSTEM
2 I-SYSTEM
virtual B-SYSTEM
machine I-SYSTEM
in O
this O
lab O

In O
this O
lab O
iptables B-FEATURE
snort B-TOOL
Nmap B-TOOL
and O
Metasploit B-TOOL
are O
four O
major O
security B-APP
services I-APP
and O
tools B-TOOL
that O
you O
will O
use O

Iptables B-FEATURE
firewall B-TOOL
Snort B-TOOL
IDS I-TOOL

demonstrate O
how O
to O
successfully O
deploy B-FUNCTION
attacks B-ATTACK
through O
the O
firewall B-TOOL

you O
need O
to O
successfully O
exploit B-FUNCTION
at O
least O
two O
vulnerabilities B-VULNERABILITY
to O
compromise O
the O
targeted B-APP
service I-APP
or O
application B-APP

stop O
the O
service B-APP
gain O
access B-FEATURE
to O
the O
command B-TOOL
shell I-TOOL
modify O
data B-DATA
or O
service B-APP
parameters B-FEATURE
steal B-TECHNIQUE
critical B-FEATURE
data B-DATA
modify O
system B-FEATURE
configuration I-FEATURE
or O
setup B-SYSTEM

How O
to O
identify B-TECHNIQUE
the O
vulnerability B-VULNERABILITY

The O
steps O
of O
using O
Metasploit B-TOOL
to O
explore B-TECHNIQUE
the O
vulnerability B-VULNERABILITY

Suggest O
the O
countermeasure B-TECHNIQUE
or O
mitigation B-TECHNIQUE
solutions I-TECHNIQUE
based O
on O
given O
firewall B-FUNCTION
rules I-FUNCTION

Detecting B-TECHNIQUE
and O
Subverting B-TECHNIQUE
Firewalls B-TOOL
and O
Intrusion B-TOOL
Detection I-TOOL
Systems I-TOOL

firewall B-TOOL
setup B-SYSTEM
that O
you O
want O
to O
perform B-FUNCTION
the O
pentest B-TECHNIQUE

To O
have O
better O
understanding O
of O
various O
scans B-TECHNIQUE
you O
can O
use O
firewall B-TOOL
reset B-FUNCTION
to O
clear O
the O
firewall B-FUNCTION
rules I-FUNCTION
and O
set O
it O
to O
blacklist B-FEATURE

change O
your O
scanning B-TECHNIQUE
target B-SYSTEM
directly O
to O
the O
Metasploitable-2 B-SYSTEM
VM B-SYSTEM

compare O
scanning B-TECHNIQUE
responses B-FEATURE
with O
the O
firewall B-FUNCTION
rules I-FUNCTION

you O
can O
observe O
results O
w/o O
firewall B-FUNCTION
rules I-FUNCTION
to O
interpret O
the O
scanning B-TECHNIQUE
outcomes O

Nmap B-TOOL
and O
Metasploit B-TOOL
Framework I-TOOL
are O
installed O
on O
both O
the O
Client B-SYSTEM
and O
Gateway B-SYSTEM
VMs I-SYSTEM

Thus O
you O
can O
also O
compare O
the O
scanning B-TECHNIQUE
results O
on O
the O
Client B-SYSTEM
vs O
on O
the O
Gateway B-SYSTEM
which O
can O
help O
you O
determine O
if O
the O
firewall B-TOOL
successfully O
defend B-TECHNIQUE
a O
scan B-TECHNIQUE
or O
attack B-ATTACK

Using O
tcpdump B-TOOL
to O
monitor B-TECHNIQUE
the O
traffic B-DATA
from O
both O
ingress B-FEATURE
and O
egress B-FEATURE
ports B-FEATURE
of O
the O
gateway B-SYSTEM
is O
always O
the O
best O
approach O
to O
help O
you O
understand O
the O
actions O
performed O
on O
the O
Gateway B-SYSTEM

you O
are O
not O
restricted O
by O
the O
enumerated O
scanning B-TECHNIQUE
approaches O
and O
provided O
hints O

pentest B-TECHNIQUE
is O
the O
art O
of O
cyberdefense B-TECHNIQUE
and O
you O
need O
to O
be O
creative O

One O
helpful O
feature O
of O
the O
TCP B-FEATURE
protocol I-FEATURE
is O
that O
systems B-SYSTEM
are O
required O
by O
RFC B-FEATURE
793 I-FEATURE
to O
send O
a O
negative B-FEATURE
response I-FEATURE
to O
unexpected O
connection B-FEATURE
requests I-FEATURE
in O
the O
form O
of O
a O
TCP B-DATA
RST I-DATA
reset I-DATA
packet I-DATA

The O
RST B-DATA
packet I-DATA
makes O
closed B-FEATURE
ports B-FEATURE
easy O
for O
Nmap B-TOOL
to O
recognize O

Filtering B-FEATURE
devices B-SYSTEM
such O
as O
firewalls B-TOOL
on O
the O
other O
hand O
tend O
to O
drop O
packets B-DATA
destined O
for O
disallowed O
ports B-FEATURE

In O
some O
cases O
they O
send O
ICMP B-DATA
error I-DATA
messages I-DATA
usually O
port B-FEATURE
unreachable I-FEATURE
instead O

Because O
dropped B-DATA
packets I-DATA
and O
ICMP B-DATA
errors I-DATA
are O
easily O
distinguishable O
from O
RST B-DATA
packets I-DATA
Nmap B-TOOL
can O
reliably B-FEATURE
detect B-TECHNIQUE
filtered B-FEATURE
TCP B-FEATURE
ports I-FEATURE
from O
open B-FEATURE
or O
closed B-FEATURE
ones O
and O
it O
does O
so O
automatically O

The O
ACK B-TECHNIQUE
scan I-TECHNIQUE
sends O
TCP B-DATA
packets I-DATA
with O
only O
the O
ACK B-DATA
bit I-DATA
set I-DATA

Whether O
ports B-FEATURE
are O
open B-FEATURE
or O
closed B-FEATURE
the O
target B-SYSTEM
is O
required O
by O
RFC B-FEATURE
793 I-FEATURE
to O
respond B-FEATURE
with O
a O
RST B-DATA
packet I-DATA

Firewalls B-TOOL
can O
block B-FEATURE
the O
probe B-TECHNIQUE

the O
firewall B-TOOL
usually O
makes O
no O
response B-FEATURE
or O
send O
back O
an O
ICMP B-DATA
destination I-DATA
unreachable I-DATA
error I-DATA

This O
distinction O
allows O
Nmap B-TOOL
to O
report O
whether O
the O
ACK B-DATA
packets I-DATA
are O
being O
filtered B-FEATURE

The O
set O
of O
filtered B-FEATURE
ports I-FEATURE
reported O
by O
an O
Nmap B-TOOL
ACK B-TECHNIQUE
scan I-TECHNIQUE
is O
often O
smaller O
than O
for O
an O
SYN B-TECHNIQUE
scan I-TECHNIQUE
against O
the O
same O
machine B-SYSTEM
because O
ACK B-TECHNIQUE
scans I-TECHNIQUE
are O
more O
difficult O
to O
filter B-FEATURE

Stateless B-FEATURE
firewall B-TOOL
can O
block B-FEATURE
incoming B-FEATURE
SYN B-DATA
packets I-DATA
without O
the O
ACK B-DATA
bit I-DATA
set I-DATA
is O
an O
easy O
way O
to O
do O
this O
but O
it O
still O
allows O
any O
ACK B-DATA
packets I-DATA
through O

Blocking B-FEATURE
those O
ACK B-DATA
packets I-DATA
is O
more O
difficult O
because O
they O
do O
not O
tell O
which O
side O
started O
the O
connection B-FEATURE

Run O
SYN B-TECHNIQUE
scan I-TECHNIQUE
and O
ACK B-TECHNIQUE
scan I-TECHNIQUE
and O
compare O
difference O

To O
block B-FEATURE
unsolicited B-ATTACK
ACK B-DATA
packets I-DATA
as O
sent O
by O
the O
Nmap B-TOOL
ACK B-TECHNIQUE
scan I-TECHNIQUE
while O
allowing O
ACK B-DATA
packets I-DATA
belonging O
to O
legitimate B-FEATURE
connections B-FEATURE

firewalls B-TOOL
must O
statefully B-FEATURE
watch O
every O
established B-FEATURE
connection I-FEATURE
to O
determine O
whether O
a O
given O
ACK B-FEATURE
is O
appropriate O

Please O
check O
the O
provided O
iptables B-FEATURE
firewall B-TOOL
rules B-FUNCTION
and O
check O
where O
the O
stateful B-FEATURE
firewall B-TOOL
policies O
kicked O
in O

These O
stateful B-FEATURE
firewalls B-TOOL
are O
usually O
more O
secure B-FEATURE
because O
they O
can O
be O
more O
restrictive O

Blocking B-FEATURE
ACK B-TECHNIQUE
scans I-TECHNIQUE
is O
one O
extra O
available O
restriction O

The O
downsides O
are O
that O
they O
require O
more O
resources O
to O
function O
and O
a O
stateful B-FEATURE
firewall B-TOOL
reboot B-FUNCTION
can O
cause O
a O
device B-SYSTEM
to O
lose O
state B-FEATURE
and O
terminate O
all O
established B-FEATURE
connections I-FEATURE
passing O
through O
it O

the O
key O
analysis O
point O
of O
this O
task O
is O
to O
check O
the O
feedback O
of O
Nmap B-TOOL
scans B-TECHNIQUE
with O
different O
scanning B-TECHNIQUE
options O
to O
understand O
the O
implication O
of O
Nmap B-TOOL
outputs B-FEATURE
filtered B-FEATURE
unfiltered B-FEATURE
closed B-FEATURE
open B-FEATURE

What O
are O
the O
implications O
of O
the O
firewall B-TOOL
setup B-SYSTEM
according O
to O
these O
feedback O

Systems B-SYSTEM
running O
TCP B-FEATURE
protocol I-FEATURE
is O
required O
by O
RFC B-FEATURE
793 I-FEATURE
to O
send O
a O
negative B-FEATURE
response I-FEATURE
to O
unexpected O
connection B-FEATURE
requests I-FEATURE
in O
the O
form O
of O
a O
TCP B-DATA
RST I-DATA
reset I-DATA
packet I-DATA

the O
key O
analysis O
point O
of O
this O
task O
is O
how O
to O
infer O
the O
deny-by-default B-FEATURE
firewall B-TOOL
policy B-FEATURE
based O
on O
the O
scanning B-TECHNIQUE
responses B-FEATURE
from O
the O
firewall B-TOOL

The O
ACK B-FEATURE
scan I-FEATURE
sends O
TCP B-DATA
packets I-DATA
with O
only O
the O
ACK B-DATA
bit I-DATA
set I-DATA
Whether O
ports B-FEATURE
are O
open B-FEATURE
or O
closed B-FEATURE
the O
target B-SYSTEM
is O
required O
by O
RFC B-FEATURE
793 I-FEATURE
to O
respond O
with O
a O
RST B-DATA
packet I-DATA

the O
key O
analysis O
point O
of O
this O
task O
is O
how O
to O
infer O
stateful B-FEATURE
or O
stateless B-FEATURE
firewall B-TOOL
policies B-FEATURE
setup B-SYSTEM
based O
on O
the O
scanning B-TECHNIQUE
responses B-FEATURE
from O
the O
firewall B-TOOL

What O
is O
your O
observation O
of O
the O
responding O
time O
of O
each O
type O
of O
scans B-TECHNIQUE
and O
what O
is O
the O
reason O
and O
implications? O

Find O
at O
least O
one O
accessible O
open B-FEATURE
or O
closed B-FEATURE
port B-FEATURE
of O
one O
machine B-SYSTEM
on O
the O
internal O
network B-SYSTEM

The O
machine B-SYSTEM
chosen O
should O
have O
little O
network B-DATA
traffic I-DATA
to O
avoid O
confusing O
results O

Most O
Linux B-SYSTEM
system I-SYSTEM
does O
not O
work O

Verify O
that O
the O
machine B-SYSTEM
has O
predictable O
IP B-FEATURE
ID I-FEATURE
sequences O

targeting O
a O
Windows B-SYSTEM
XP I-SYSTEM
the O
Nping B-TOOL
options O
request O
that O
five O
SYN B-DATA
packets I-DATA
be O
sent O
to O
port B-FEATURE
80 I-FEATURE
one O
second O
apart O

Start O
a O
flooding B-ATTACK
to O
a O
chosen O
host B-SYSTEM

Do O
not O
use O
any O
of O
the O
address B-FEATURE
from O
the O
nping B-TOOL
node B-SYSTEM

It O
shows O
that O
the O
IP B-FEATURE
IDs I-FEATURE
are O
increasing O
by O
roughly O
11 O
per O
second O
instead O
of O
one O

The O
target B-SYSTEM
19216803 O
is O
receiving O
our O
10 O
forged B-ATTACK
packets I-ATTACK
per O
second O
and O
responding O
to O
each O
of O
them O

Repeat O
step O
3 O
using O
spoofed B-VULNERABILITY
addresses B-FEATURE
that O
you O
suspect O
may O
be O
allowed O
through O
the O
firewall B-TOOL

This O
techniqueï¿½s O
result O
is O
a O
list O
of O
source B-SYSTEM
address B-FEATURE
netblocks B-TECHNIQUE
that O
are O
permitted O
through O
the O
firewall B-TOOL
and O
those O
that O
are O
blocked B-FEATURE

UDP B-FEATURE
is O
often O
more O
difficult O
because O
the O
protocol B-FEATURE
does O
not O
provide O
acknowledgment O
of O
open B-FEATURE
ports I-FEATURE
like O
TCP B-FEATURE
does O

Many O
UDP B-FEATURE
applications B-APP
will O
ignore O
unexpected O
packets B-DATA
leaving O
the O
scanner B-TOOL
unsure O
whether O
the O
port B-FEATURE
is O
open B-FEATURE
or O
filtered B-FEATURE

what O
is O
the O
implication O
of O
open B-FEATURE
or O
filtered B-FEATURE
states O
of O
the O
UDP B-TECHNIQUE
scan I-TECHNIQUE

how O
to O
use O
Nmap B-TOOL
to O
perform O
port B-TECHNIQUE
scanning I-TECHNIQUE

Based O
on O
the O
scanning B-TECHNIQUE
results O
can O
you O
further O
deploy B-FUNCTION
idle B-TECHNIQUE
scan I-TECHNIQUE
and O
FTP B-TECHNIQUE
Bounce I-TECHNIQUE
scan I-TECHNIQUE

Nmap B-TOOL
uses O
the O
g O
and O
source B-SYSTEM
port B-FEATURE
options O
to O
manipulate O
source B-SYSTEM
ports B-FEATURE
of O
transmitted B-DATA
packets I-DATA

Many O
intrusion B-TOOL
detection I-TOOL
systems I-TOOL
have O
morphed O
into O
what O
marketing O
departments O
label O
intrusion B-TOOL
prevention I-TOOL
systems I-TOOL

Some O
can O
only O
sniff B-TECHNIQUE
the O
network B-SYSTEM
like O
a O
normal O
IDS B-TOOL
and O
send O
triggered B-FEATURE
packet I-FEATURE
responses I-FEATURE

The O
best O
IPS B-TOOL
systems I-TOOL
are O
inline O
on O
the O
network B-SYSTEM
to O
restrict O
packet B-FEATURE
flow I-FEATURE
when O
suspicious B-VULNERABILITY
activity I-VULNERABILITY
is O
detected B-TECHNIQUE

For O
example O
an O
IPS B-TOOL
may O
block B-FEATURE
any O
further O
traffic B-DATA
from O
an O
IP B-FEATURE
address I-FEATURE
that O
they O
believe O
has O
port B-TECHNIQUE
scanned I-TECHNIQUE
them O
or O
attempted O
buffer B-ATTACK
overflow I-ATTACK
exploit I-ATTACK

Attackers B-ATTACKER
are O
likely O
to O
notice O
this O
if O
they O
port B-TECHNIQUE
scan I-TECHNIQUE
a O
system B-SYSTEM
and O
cannot O
connect O
to O
the O
reported O
open B-FEATURE
ports I-FEATURE

Attackers B-ATTACKER
can O
confirm O
that O
they O
are O
blocked B-FEATURE
by O
trying O
to O
connect O
from O
another O
IP B-FEATURE
address I-FEATURE

Suspicious B-VULNERABILITY
response B-DATA
packets I-DATA
can O
also O
tip-off O
that O
an O
IDS B-TOOL
has O
flagged B-FEATURE
an O
attackerï¿½s B-ATTACKER
actions O

In O
particular O
many O
IDSs B-TOOL
that O
are O
not O
inline O
on O
the O
network B-SYSTEM
will O
forge B-VULNERABILITY
RST B-DATA
packets I-DATA
to O
tear O
down O
connections B-FEATURE

Ways O
to O
determine O
that O
these O
packets B-DATA
are O
forged B-VULNERABILITY
are O
covered O
in O
the O
section O
called O
Detecting B-TECHNIQUE
Packet B-ATTACK
Forgery I-ATTACK
by O
Firewall B-TOOL
and O
Intrusion B-TOOL
Detection I-TOOL
Systems I-TOOL

For O
example O
the O
Linux B-SYSTEM
iptables B-APP
system B-SYSTEM
which O
offers O
many O
methods O
for O
rejecting O
undesired O
packets B-DATA
by O
using: O

The O
type O
given O
can O
be O
icmp-net-unreachable B-FEATURE
icmp-host-unreachable B-FEATURE
icmp-port-unreachable B-FEATURE
icmp-proto-unreachable B-FEATURE
icmp-net-prohibited B-FEATURE
or O
icmp-host-prohibited B-FEATURE
which O
return O
the O
appropriate O
ICMP B-DATA
error I-DATA
message I-DATA
port-unreachable B-FEATURE
is O
the O
default O

The O
option O
tcp-reset B-FEATURE
can O
be O
used O
on O
rules B-FUNCTION
which O
only O
match O
the O
TCP B-FEATURE
protocol I-FEATURE

this O
causes O
a O
TCP B-DATA
RST I-DATA
packet I-DATA
to O
be O
sent O
back O

This O
is O
mainly O
useful O
for O
blocking B-FEATURE
ident B-FEATURE
113/tcp I-FEATURE
probes B-TECHNIQUE
which O
frequently O
occur O
when O
sending O
mail O
to O
broken B-FEATURE
mail B-SYSTEM
hosts I-SYSTEM
which O
wont O
accept O
your O
mail O
otherwise O

Forging B-ATTACK
RST B-DATA
packets I-DATA
by O
firewalls B-TOOL
and O
IDS B-TOOL
or O
IPS B-TOOL
is O
not O
particularly O
common O
outside O
of O
port B-FEATURE
113 I-FEATURE

It O
can O
be O
confusing O
to O
legitimate B-FEATURE
network B-SECURITYTEAM
operators I-SECURITYTEAM
and O
allows O
scanners B-TOOL
to O
immediately O
move O
on O
to O
the O
next O
port B-FEATURE
without O
waiting O
on O
the O
timeout B-FEATURE
caused O
by O
dropped B-DATA
packets I-DATA

Such O
forgery B-ATTACK
can O
usually O
be O
detected B-TECHNIQUE
by O
careful O
analysis B-TECHNIQUE
of O
the O
RST B-DATA
packet I-DATA
compared O
to O
other O
packets B-DATA
sent O
by O
the O
machine B-SYSTEM

you O
can O
purposely O
alter O
some O
iptables B-APP
rules B-FUNCTION
and O
observe O
the O
difference O
and O
how O
the O
changes O
can O
impact O
your O
inferences O
about O
the O
firewall B-TOOL
setup B-SYSTEM

One O
way O
to O
detect B-TECHNIQUE
certain O
IDSs B-TOOL
is O
to O
watch O
for O
unexplained O
gaps O
or O
suspicious B-VULNERABILITY
machines B-SYSTEM
in O
traceroutes B-TOOL

While O
most O
operating B-SYSTEM
systems I-SYSTEM
include O
a O
traceroute B-TOOL
command B-FUNCTION
Nmap B-TOOL
offers O
a O
faster O
and O
more O
effective O
alternative O
with O
the O
traceroute B-TOOL
option O

This O
approach O
may O
only O
detect B-TECHNIQUE
inline B-FEATURE
IDSs B-TOOL
instead O
of O
those O
that O
passively B-FEATURE
sniff B-TECHNIQUE
the O
network B-SYSTEM
without O
being O
part O
of O
the O
route B-FUNCTION

Additionally O
inspect B-TECHNIQUE
iptables B-APP
rules B-FUNCTION
and O
output O
from O
Nmap B-TOOL
and O
ping B-FUNCTION
and O
explain O
why O
the O
above-issued O
commands B-FUNCTION
cannot O
return O
the O
path O
information B-DATA

The O
following O
techniques O
are O
used O
to O
avoid O
being O
detected B-TECHNIQUE
by O
the O
IDS B-TOOL
snort B-TOOL

Your O
snort B-TOOL
can O
detect B-TECHNIQUE
many O
scanning B-TECHNIQUE
activities O
based O
on O
the O
given O
snort B-FUNCTION
rules I-FUNCTION

how O
to O
configure B-FUNCTION
your O
scanning B-TECHNIQUE
parameters B-FEATURE
in O
the O
following O
given O
strategies O

from O
slow B-FEATURE
down I-FEATURE
to O
DNS B-SYSTEM
proxying I-SYSTEM
which O
ones O
you O
can O
deploy B-FUNCTION
in O
our O
testing B-SYSTEM
environment I-SYSTEM

You O
need O
to O
check O
the O
rules B-FUNCTION
specified O
in O
the O
given O
snort B-TOOL
local O
rules B-FUNCTION

Based O
on O
the O
following O
given O
Nmap B-TOOL
scanning B-TECHNIQUE
methods O
design O
new O
Nmap B-TOOL
scanning B-TECHNIQUE
commands B-FUNCTION
to O
avoided O
being O
detected B-TECHNIQUE
by O
snort B-FUNCTION
rules I-FUNCTION

Nmap B-TOOL
offers O
several O
timing B-FEATURE
modes I-FEATURE
that O
can O
be O
selected O
with O
the O
T O
option O
to O
accomplish O
this O

For O
example O
the O
T O
paranoid B-FEATURE
option I-FEATURE
causes O
Nmap B-TOOL
to O
send O
just O
one O
probe B-TECHNIQUE
at O
a O
time O
waiting O
five O
minutes O
between O
them O

A O
large O
scan B-TECHNIQUE
may O
take O
weeks O
but O
at O
least O
it O
probably O
will O
not O
be O
detected B-TECHNIQUE

The O
T O
sneaky B-FEATURE
option I-FEATURE
is O
similar O
but O
it O
only O
waits O
15 O
seconds O
between O
probes B-TECHNIQUE

Scatter O
probes B-TECHNIQUE
across O
networks B-SYSTEM
rather O
than O
scanning B-TECHNIQUE
hosts B-SYSTEM
consecutively O

IP B-FEATURE
fragments I-FEATURE
can O
be O
a O
major O
problem O
for O
intrusion B-TOOL
detection I-TOOL
systems I-TOOL

particularly O
because O
the O
handling O
of O
oddities O
such O
as O
overlapping B-FEATURE
fragments I-FEATURE
and O
fragmentation B-FEATURE
assembly I-FEATURE
timeouts I-FEATURE
are O
ambiguous O
and O
differ O
substantially O
between O
platforms B-SYSTEM

Thus O
the O
IDS B-TOOL
often O
has O
to O
guess O
at O
how O
the O
remote B-SYSTEM
system I-SYSTEM
will O
interpret O
a O
packet B-DATA

An O
Nmap B-TOOL
scan B-TECHNIQUE
will O
use O
tiny B-FEATURE
IP I-FEATURE
fragments I-FEATURE

By O
default O
Nmap B-TOOL
will O
include O
up O
to O
eight O
bytes B-DATA
of O
data B-DATA
in O
each O
fragment B-FEATURE
so O
a O
typical O
20 O
or O
24 O
byte B-DATA
depending O
on O
options O
TCP B-DATA
packet I-DATA
is O
sent O
in O
three O
tiny B-FEATURE
fragments I-FEATURE

Every O
instance O
of O
F O
adds O
eight O
to O
the O
maximum O
fragment B-FEATURE
data B-FEATURE
size I-FEATURE

Fragmentation B-TECHNIQUE
is O
only O
supported O
for O
Nmapï¿½s B-TOOL
raw B-DATA
packet I-DATA
features O
including O
TCP B-FEATURE
and O
UDP B-FEATURE
port B-TECHNIQUE
scans I-TECHNIQUE
except O
connect B-TECHNIQUE
scan I-TECHNIQUE
and O
FTP B-TECHNIQUE
bounce I-TECHNIQUE
scan I-TECHNIQUE
and O
OS B-TECHNIQUE
detection I-TECHNIQUE

Features B-FEATURE
such O
as O
version B-TECHNIQUE
detection I-TECHNIQUE
and O
the O
Nmap B-TOOL
Scripting I-TOOL
Engine I-TOOL
generally O
donï¿½t O
support O
fragmentation B-TECHNIQUE

because O
they O
rely O
on O
your O
hostï¿½s B-SYSTEM
TCP B-FEATURE
stack I-FEATURE
to O
communicate O
with O
target B-APP
services I-APP

Decoys B-TECHNIQUE
are O
added O
with O
the O
D O
option O

The O
argument O
is O
a O
list O
of O
hosts B-SYSTEM
separated O
by O
commas O

The O
string O
ME O
can O
be O
used O
as O
one O
of O
the O
decoys B-TECHNIQUE
to O
represent O
where O
the O
TRUE O
source B-SYSTEM
host I-SYSTEM
should O
appear O
in O
the O
scan B-TECHNIQUE
order O

source B-SYSTEM
IP B-FEATURE
and O
Nmap B-TOOL
will O
launch O
the O
requested O
port B-TECHNIQUE
scan I-TECHNIQUE
from O
that O
given O
source B-SYSTEM

No O
useful O
Nmap B-TOOL
results O
will O
be O
available O
since O
the O
target B-SYSTEM
will O
respond O
to O
the O
spoofed B-VULNERABILITY
IP B-FEATURE
and O
Nmap B-TOOL
will O
not O
see O
those O
responses B-FEATURE

IDS B-TOOL
alarms B-FUNCTION
at O
the O
target B-SYSTEM
will O
blame O
the O
spoofed B-VULNERABILITY
source O
for O
the O
scan B-TECHNIQUE

This O
can O
be O
useful O
for O
framing O
innocent O
parties O
casting O
doubt O
in O
the O
administratorï¿½s B-SECURITYTEAM
mind O
about O
his O
IDS B-TOOL
accuracy B-FEATURE

The O
idle B-TECHNIQUE
scan I-TECHNIQUE
is O
a O
clever O
technique O
that O
allows O
for O
spoofing B-VULNERABILITY
the O
source B-SYSTEM
IP B-FEATURE
address I-FEATURE
as O
discussed O
in O
the O
previous O
section O
while O
still O
obtaining O
accurate O
TCP B-TECHNIQUE
port I-TECHNIQUE
scan I-TECHNIQUE
results O

This O
is O
done O
by O
abusing O
the O
properties O
of O
the O
IP B-FEATURE
identification I-FEATURE
field I-FEATURE
as O
implemented O
by O
many O
systems B-SYSTEM

However O
most O
Linux B-SYSTEM
systems I-SYSTEM
are O
immune O
to O
idle B-ATTACK
scan I-ATTACK
attacks I-ATTACK

Nmap B-TOOL
performs O
reverse-DNS B-FUNCTION
resolution I-FUNCTION
by O
default O
against O
every O
responsive B-FEATURE
host B-SYSTEM

These O
DNS B-FUNCTION
lookup I-FUNCTION
probes B-TECHNIQUE
could O
be O
detected B-TECHNIQUE
Even O
something O
as O
unintrusive B-FEATURE
as O
a O
list B-TECHNIQUE
scan I-TECHNIQUE
it O
could O
be O
detected B-TECHNIQUE
this O
way O

The O
probes B-TECHNIQUE
will O
come O
from O
the O
DNS B-SYSTEM
server I-SYSTEM
configured B-FUNCTION
for O
the O
machine B-SYSTEM
running O
Nmap B-TOOL

The O
most O
effective O
way O
to O
eliminate O
this O
risk B-FEATURE
is O
to O
specify O
n O
to O
disable O
all O
reverse B-FUNCTION
DNS I-FUNCTION
resolution I-FUNCTION

You O
can O
specify O
one O
or O
more O
of O
those O
name B-SYSTEM
servers I-SYSTEM
to O
the O
dns B-SYSTEM
servers I-SYSTEM
option O
of O
Nmap B-TOOL
and O
all O
DNS B-FUNCTION
queries I-FUNCTION
will O
be O
proxied B-SYSTEM
through O
them O

The O
scanning B-TECHNIQUE
results O
derived O
from O
task O
1 O
to O
task O
3 O
allows O
you O
to O
identify O
potential O
vulnerabilities B-VULNERABILITY
to O
explore B-TECHNIQUE

